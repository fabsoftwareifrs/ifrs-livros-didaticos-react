[{"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\index.js":"1","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\serviceWorker.js":"2","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\App.js":"3","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\routes\\UnPrivateRoute.js":"4","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\routes\\PrivateRoute.js":"5","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\providers\\Auth.js":"6","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\components\\GlobalStyles.js":"7","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\mixins\\chartjs.js":"8","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\theme\\index.js":"9","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\layouts\\DashboardLayout\\index.js":"10","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\layouts\\MainLayout\\index.js":"11","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksList\\ListView\\index.js":"12","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\StudentsList\\ListView\\index.js":"13","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\auth\\index.js":"14","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksList\\ListView\\EditBookDetails\\index.js":"15","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\StudentsList\\ListView\\CreateStudentsDetails\\index.js":"16","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksList\\ListView\\CreateBooksDetails\\index.js":"17","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\StudentsList\\ListView\\EditStudentsDetails\\index.js":"18","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksCategoryList\\ListView\\CreateCategoryDetails\\index.js":"19","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksCategoryList\\ListView\\index.js":"20","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksCategoryList\\ListView\\EditCategoryDetails\\index.js":"21","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\ClassesList\\ListView\\index.js":"22","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\UsersList\\ListView\\EditUsersDetails\\index.js":"23","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\ClassesList\\ListView\\CreateClassesDetails\\index.js":"24","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\UsersList\\ListView\\index.js":"25","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\ClassesList\\ListView\\EditClassesDetails\\index.js":"26","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\UsersList\\ListView\\CreateUsersDetails\\index.js":"27","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\LoansList\\ListView\\EditLoansDetails\\index.js":"28","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CoursesList\\ListView\\CreateCourseDetails\\index.js":"29","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CoursesList\\ListView\\EditCourseDetails\\index.js":"30","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CoursesList\\ListView\\index.js":"31","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\LoansList\\ListView\\CreateLoansDetails\\index.js":"32","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\LoansList\\ListView\\index.js":"33","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\PeriodsList\\ListView\\index.js":"34","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CopiesList\\ListView\\EditCopiesDetails\\index.js":"35","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\LatesList\\ListView\\index.js":"36","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CopiesList\\ListView\\index.js":"37","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\PeriodsList\\ListView\\EditPeriodDetails\\index.js":"38","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\PeriodsList\\ListView\\CreatePeriodDetails\\index.js":"39","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\PeriodsList\\ListView\\CreatePeriodDetails\\fields.js":"40","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\PeriodsList\\ListView\\EditPeriodDetails\\fields.js":"41","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\period.js":"42","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\queries\\period.js":"43","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\utils\\printConfig.js":"44","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CopiesList\\ListView\\Toolbar.js":"45","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\hooks\\MyForm\\index.js":"46","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\components\\ModalIcon.js":"47","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\copy.js":"48","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\queries\\copy.js":"49","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\components\\Modal.js":"50","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\components\\Page.js":"51","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\queries\\loan.js":"52","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\loan.js":"53","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\mail.js":"54","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\LatesList\\ListView\\Toolbar.js":"55","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CopiesList\\ListView\\EditCopiesDetails\\fields.js":"56","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\PeriodsList\\ListView\\Toolbar.js":"57","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\LoansList\\ListView\\Toolbar.js":"58","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\LoansList\\ListView\\CreateLoansDetails\\fields.js":"59","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\queries\\student.js":"60","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CoursesList\\ListView\\Toolbar.js":"61","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\queries\\course.js":"62","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\course.js":"63","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CoursesList\\ListView\\EditCourseDetails\\fields.js":"64","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CoursesList\\ListView\\CreateCourseDetails\\fields.js":"65","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\LoansList\\ListView\\EditLoansDetails\\fields.js":"66","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\queries\\user.js":"67","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\UsersList\\ListView\\CreateUsersDetails\\fields.js":"68","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\user.js":"69","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\class.js":"70","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\ClassesList\\ListView\\EditClassesDetails\\fields.js":"71","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\queries\\class.js":"72","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\UsersList\\ListView\\Toolbar.js":"73","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\ClassesList\\ListView\\CreateClassesDetails\\fields.js":"74","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\UsersList\\ListView\\EditUsersDetails\\fields.js":"75","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\queries\\category.js":"76","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\ClassesList\\ListView\\Toolbar.js":"77","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksCategoryList\\ListView\\EditCategoryDetails\\fields.js":"78","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\category.js":"79","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\queries\\book.js":"80","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksCategoryList\\ListView\\Toolbar.js":"81","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksCategoryList\\ListView\\CreateCategoryDetails\\fields.js":"82","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\student.js":"83","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksList\\ListView\\CreateBooksDetails\\fields.js":"84","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\StudentsList\\ListView\\EditStudentsDetails\\fields.js":"85","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksList\\ListView\\EditBookDetails\\fields.js":"86","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\StudentsList\\ListView\\CreateStudentsDetails\\fields.js":"87","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\book.js":"88","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\StudentsList\\ListView\\Toolbar.js":"89","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\auth\\LoginView.js":"90","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\layouts\\DashboardLayout\\TopBar.js":"91","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksList\\ListView\\Toolbar.js":"92","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\layouts\\MainLayout\\TopBar.js":"93","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\theme\\typography.js":"94","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\theme\\shadows.js":"95","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\layouts\\DashboardLayout\\NavBar\\index.js":"96","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\auth.js":"97","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\auth\\fields.js":"98","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\components\\Logo.js":"99","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js":"100"},{"size":1006,"mtime":1628605533135,"results":"101","hashOfConfig":"102"},{"size":5824,"mtime":1628605541755,"results":"103","hashOfConfig":"102"},{"size":8668,"mtime":1628605526488,"results":"104","hashOfConfig":"102"},{"size":1202,"mtime":1628602470568,"results":"105","hashOfConfig":"102"},{"size":1194,"mtime":1628602464240,"results":"106","hashOfConfig":"102"},{"size":3311,"mtime":1629255274278,"results":"107","hashOfConfig":"102"},{"size":1483,"mtime":1628602070232,"results":"108","hashOfConfig":"102"},{"size":6536,"mtime":1628602434425,"results":"109","hashOfConfig":"102"},{"size":1393,"mtime":1628604386058,"results":"110","hashOfConfig":"102"},{"size":2088,"mtime":1628602354062,"results":"111","hashOfConfig":"102"},{"size":1736,"mtime":1628602415387,"results":"112","hashOfConfig":"102"},{"size":7111,"mtime":1628603331840,"results":"113","hashOfConfig":"102"},{"size":6696,"mtime":1628605320581,"results":"114","hashOfConfig":"102"},{"size":1577,"mtime":1628602626587,"results":"115","hashOfConfig":"102"},{"size":8153,"mtime":1628603284495,"results":"116","hashOfConfig":"102"},{"size":8627,"mtime":1628605193419,"results":"117","hashOfConfig":"102"},{"size":8097,"mtime":1628603185874,"results":"118","hashOfConfig":"102"},{"size":10396,"mtime":1628605311327,"results":"119","hashOfConfig":"102"},{"size":3950,"mtime":1628602731155,"results":"120","hashOfConfig":"102"},{"size":6422,"mtime":1628602868792,"results":"121","hashOfConfig":"102"},{"size":4472,"mtime":1628602859431,"results":"122","hashOfConfig":"102"},{"size":6436,"mtime":1628603547493,"results":"123","hashOfConfig":"102"},{"size":6554,"mtime":1628605507201,"results":"124","hashOfConfig":"102"},{"size":5812,"mtime":1628603469048,"results":"125","hashOfConfig":"102"},{"size":6260,"mtime":1628605513967,"results":"126","hashOfConfig":"102"},{"size":6882,"mtime":1628603532820,"results":"127","hashOfConfig":"102"},{"size":5954,"mtime":1628605441984,"results":"128","hashOfConfig":"102"},{"size":11927,"mtime":1628604823085,"results":"129","hashOfConfig":"102"},{"size":3837,"mtime":1628604582330,"results":"130","hashOfConfig":"102"},{"size":4360,"mtime":1628604603731,"results":"131","hashOfConfig":"102"},{"size":6170,"mtime":1628604622574,"results":"132","hashOfConfig":"102"},{"size":8956,"mtime":1628604781120,"results":"133","hashOfConfig":"102"},{"size":12686,"mtime":1628604832235,"results":"134","hashOfConfig":"102"},{"size":6465,"mtime":1628605028477,"results":"135","hashOfConfig":"102"},{"size":5902,"mtime":1628604481514,"results":"136","hashOfConfig":"102"},{"size":12924,"mtime":1628604757174,"results":"137","hashOfConfig":"102"},{"size":7504,"mtime":1628604512643,"results":"138","hashOfConfig":"102"},{"size":6221,"mtime":1628605013350,"results":"139","hashOfConfig":"102"},{"size":5588,"mtime":1628604954532,"results":"140","hashOfConfig":"102"},{"size":1172,"mtime":1628604853469,"results":"141","hashOfConfig":"102"},{"size":1224,"mtime":1628604971712,"results":"142","hashOfConfig":"102"},{"size":1214,"mtime":1628602170305,"results":"143","hashOfConfig":"102"},{"size":1307,"mtime":1628602260093,"results":"144","hashOfConfig":"102"},{"size":903,"mtime":1628602536946,"results":"145","hashOfConfig":"102"},{"size":5049,"mtime":1628604530206,"results":"146","hashOfConfig":"102"},{"size":5549,"mtime":1628602296355,"results":"147","hashOfConfig":"102"},{"size":2204,"mtime":1628602091973,"results":"148","hashOfConfig":"102"},{"size":1184,"mtime":1628602139365,"results":"149","hashOfConfig":"102"},{"size":1600,"mtime":1628602212443,"results":"150","hashOfConfig":"102"},{"size":2332,"mtime":1628602085682,"results":"151","hashOfConfig":"102"},{"size":1172,"mtime":1628602099094,"results":"152","hashOfConfig":"102"},{"size":1669,"mtime":1628602253185,"results":"153","hashOfConfig":"102"},{"size":1531,"mtime":1628602156038,"results":"154","hashOfConfig":"102"},{"size":1038,"mtime":1628602164562,"results":"155","hashOfConfig":"102"},{"size":3813,"mtime":1628604764787,"results":"156","hashOfConfig":"102"},{"size":932,"mtime":1628604474041,"results":"157","hashOfConfig":"102"},{"size":2617,"mtime":1628605036400,"results":"158","hashOfConfig":"102"},{"size":3823,"mtime":1628604839740,"results":"159","hashOfConfig":"102"},{"size":1193,"mtime":1628604773689,"results":"160","hashOfConfig":"102"},{"size":1674,"mtime":1628602266143,"results":"161","hashOfConfig":"102"},{"size":2552,"mtime":1628604629299,"results":"162","hashOfConfig":"102"},{"size":1235,"mtime":1628602237428,"results":"163","hashOfConfig":"102"},{"size":1214,"mtime":1628602150111,"results":"164","hashOfConfig":"102"},{"size":1021,"mtime":1628604596495,"results":"165","hashOfConfig":"102"},{"size":969,"mtime":1628604552299,"results":"166","hashOfConfig":"102"},{"size":1247,"mtime":1628604788705,"results":"167","hashOfConfig":"102"},{"size":1156,"mtime":1628602271214,"results":"168","hashOfConfig":"102"},{"size":1611,"mtime":1628605335541,"results":"169","hashOfConfig":"102"},{"size":1186,"mtime":1628602180087,"results":"170","hashOfConfig":"102"},{"size":1198,"mtime":1628602133016,"results":"171","hashOfConfig":"102"},{"size":1168,"mtime":1628603486934,"results":"172","hashOfConfig":"102"},{"size":1396,"mtime":1628602204682,"results":"173","hashOfConfig":"102"},{"size":2613,"mtime":1628605519696,"results":"174","hashOfConfig":"102"},{"size":1116,"mtime":1628603412613,"results":"175","hashOfConfig":"102"},{"size":1503,"mtime":1628605500171,"results":"176","hashOfConfig":"102"},{"size":1263,"mtime":1628602195224,"results":"177","hashOfConfig":"102"},{"size":2553,"mtime":1628603555383,"results":"178","hashOfConfig":"102"},{"size":1025,"mtime":1628602757850,"results":"179","hashOfConfig":"102"},{"size":1242,"mtime":1628602124954,"results":"180","hashOfConfig":"102"},{"size":1462,"mtime":1628602189599,"results":"181","hashOfConfig":"102"},{"size":2626,"mtime":1628602881916,"results":"182","hashOfConfig":"102"},{"size":973,"mtime":1628602646982,"results":"183","hashOfConfig":"102"},{"size":1227,"mtime":1628602174965,"results":"184","hashOfConfig":"102"},{"size":1592,"mtime":1628602892958,"results":"185","hashOfConfig":"102"},{"size":1803,"mtime":1628605153717,"results":"186","hashOfConfig":"102"},{"size":1560,"mtime":1628603202247,"results":"187","hashOfConfig":"102"},{"size":1751,"mtime":1628605122474,"results":"188","hashOfConfig":"102"},{"size":1193,"mtime":1628602119640,"results":"189","hashOfConfig":"102"},{"size":2603,"mtime":1628605327973,"results":"190","hashOfConfig":"102"},{"size":3263,"mtime":1628602634412,"results":"191","hashOfConfig":"102"},{"size":2212,"mtime":1628602393840,"results":"192","hashOfConfig":"102"},{"size":2614,"mtime":1628603339164,"results":"193","hashOfConfig":"102"},{"size":1474,"mtime":1628602422480,"results":"194","hashOfConfig":"102"},{"size":1298,"mtime":1628602509057,"results":"195","hashOfConfig":"102"},{"size":2357,"mtime":1628602502826,"results":"196","hashOfConfig":"102"},{"size":4297,"mtime":1628605621537,"results":"197","hashOfConfig":"102"},{"size":938,"mtime":1628602113488,"results":"198","hashOfConfig":"102"},{"size":1214,"mtime":1628602606746,"results":"199","hashOfConfig":"102"},{"size":1336,"mtime":1629314061407,"results":"200","hashOfConfig":"102"},{"size":2333,"mtime":1628602345219,"results":"201","hashOfConfig":"102"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},"17b6vr9",{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\index.js",["467"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <App />,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\serviceWorker.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\App.js",["468","469","470"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport React from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport GlobalStyles from \"src/components/GlobalStyles\";\r\nimport \"src/mixins/chartjs\";\r\nimport theme from \"src/theme\";\r\nimport PrivateRoute from \"./routes/PrivateRoute\";\r\nimport UnPrivateRoute from \"./routes/UnPrivateRoute\";\r\nimport AuthProvider from \"./providers/Auth\";\r\nimport Dashboard from \"./layouts/DashboardLayout\";\r\nimport Main from \"./layouts/MainLayout\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport LoginView from \"src/views/auth\";\r\nimport ListView from \"src/views/StudentsList/ListView\";\r\nimport Books from \"src/views/BooksList/ListView\";\r\nimport BooksCreate from \"src/views/BooksList/ListView/CreateBooksDetails\";\r\nimport BooksEdit from \"src/views/BooksList/ListView/EditBookDetails\";\r\nimport BooksCategory from \"src/views/BooksCategoryList/ListView\";\r\nimport Classes from \"src/views/ClassesList/ListView\";\r\nimport ClassesCreate from \"src/views/ClassesList/ListView/CreateClassesDetails\";\r\nimport ClassesEdit from \"src/views/ClassesList/ListView/EditClassesDetails\";\r\nimport BooksCategoryCreate from \"src/views/BooksCategoryList/ListView/CreateCategoryDetails\";\r\nimport BooksCategoryEdit from \"src/views/BooksCategoryList/ListView/EditCategoryDetails\";\r\nimport Users from \"src/views/UsersList/ListView\";\r\nimport UsersCreate from \"src/views/UsersList/ListView/CreateUsersDetails\";\r\nimport UsersEdit from \"src/views/UsersList/ListView/EditUsersDetails\";\r\nimport Courses from \"src/views/CoursesList/ListView\";\r\nimport CoursesCreate from \"src/views/CoursesList/ListView/CreateCourseDetails\";\r\nimport CoursesEdit from \"src/views/CoursesList/ListView/EditCourseDetails\";\r\nimport Students from \"src/views/StudentsList/ListView\";\r\nimport StudentsCreate from \"src/views/StudentsList/ListView/CreateStudentsDetails\";\r\nimport StudentsEdit from \"src/views/StudentsList/ListView/EditStudentsDetails\";\r\nimport Loans from \"src/views/LoansList/ListView\";\r\nimport LoansCreate from \"src/views/LoansList/ListView/CreateLoansDetails\";\r\nimport LoansEdit from \"src/views/LoansList/ListView/EditLoansDetails\";\r\nimport Copies from \"src/views/CopiesList/ListView\";\r\nimport CopiesEdit from \"src/views/CopiesList/ListView/EditCopiesDetails\";\r\nimport Lates from \"src/views/LatesList/ListView\";\r\nimport Periods from \"src/views/PeriodsList/ListView\";\r\nimport PeriodCreate from \"src/views/PeriodsList/ListView/CreatePeriodDetails\";\r\nimport PeriodEdit from \"src/views/PeriodsList/ListView/EditPeriodDetails\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { LocationSearching } from \"@material-ui/icons\";\r\nvar hist = createBrowserHistory();\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyles />\r\n        <AuthProvider>\r\n          <Switch>\r\n            <UnPrivateRoute\r\n              exact\r\n              path=\"/\"\r\n              component={() => <Main Children={LoginView} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/student\"\r\n              component={() => <Dashboard Children={ListView} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/books\"\r\n              component={() => <Dashboard Children={Books} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/books/create\"\r\n              component={() => <Dashboard Children={BooksCreate} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/books/edit/:id\"\r\n              component={() => <Dashboard Children={BooksEdit} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/category\"\r\n              component={() => <Dashboard Children={BooksCategory} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/category/create\"\r\n              component={() => <Dashboard Children={BooksCategoryCreate} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/category/edit/:id\"\r\n              component={() => <Dashboard Children={BooksCategoryEdit} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/users\"\r\n              component={() => <Dashboard Children={Users} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/users/create\"\r\n              component={() => <Dashboard Children={UsersCreate} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/users/edit/:id\"\r\n              component={() => <Dashboard Children={UsersEdit} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/course\"\r\n              component={() => <Dashboard Children={Courses} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/course/create\"\r\n              component={() => <Dashboard Children={CoursesCreate} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/course/edit/:id\"\r\n              component={() => <Dashboard Children={CoursesEdit} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/classes\"\r\n              component={() => <Dashboard Children={Classes} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/classes/create\"\r\n              component={() => <Dashboard Children={ClassesCreate} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/classes/edit/:id\"\r\n              component={() => <Dashboard Children={ClassesEdit} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/students\"\r\n              component={() => <Dashboard Children={Students} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/students/create\"\r\n              component={() => <Dashboard Children={StudentsCreate} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/students/edit/:id\"\r\n              component={() => <Dashboard Children={StudentsEdit} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/loans\"\r\n              component={() => <Dashboard Children={Loans} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/loans/create\"\r\n              component={() => <Dashboard Children={LoansCreate} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/loans/edit/:id\"\r\n              component={() => <Dashboard Children={LoansEdit} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/copies/:id\"\r\n              component={() => <Dashboard Children={Copies} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/copies/edit/:id\"\r\n              component={() => <Dashboard Children={CopiesEdit} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/lates\"\r\n              component={() => <Dashboard Children={Lates} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/periods\"\r\n              component={() => <Dashboard Children={Periods} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/periods/create\"\r\n              component={() => <Dashboard Children={PeriodCreate} />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/app/periods/edit/:id\"\r\n              component={() => <Dashboard Children={PeriodEdit} />}\r\n            />\r\n          </Switch>\r\n        </AuthProvider>\r\n      </ThemeProvider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\routes\\UnPrivateRoute.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\routes\\PrivateRoute.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\providers\\Auth.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\components\\GlobalStyles.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\mixins\\chartjs.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\theme\\index.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\layouts\\DashboardLayout\\index.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\layouts\\MainLayout\\index.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksList\\ListView\\index.js",["471","472","473","474","475","476"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport Page from \"src/components/Page\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport { BooksQuery } from \"../../../graphql/queries/book\";\r\nimport {\r\n  BooksCreate,\r\n  BooksDelete,\r\n  BooksEdit,\r\n} from \"../../../graphql/mutations/book\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Modal from \"../../../components/ModalIcon\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Container,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  CardHeader,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Trash2 as TrashIcon, Edit as EditIcon } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n    whiteSpace: \"nowrap\",\r\n    overflowX: \"auto\",\r\n  },\r\n  icon: {\r\n    margin: \"0 10px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  endCell: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst BooksList = (props) => {\r\n  const classes = useStyles();\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { loading, error, data } = useQuery(BooksQuery, {\r\n    variables: { input: { page: page, paginate: limit, search } },\r\n  });\r\n  const [mutationDelete] = useMutation(BooksDelete, {\r\n    refetchQueries: [\r\n      {\r\n        query: BooksQuery,\r\n        variables: { input: { page: page, paginate: limit, search } },\r\n      },\r\n    ],\r\n  });\r\n\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage + 1);\r\n  };\r\n  const deleteBook = (id) => {\r\n    mutationDelete({ variables: { id } });\r\n  };\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Livros\">\r\n      <Container maxWidth={false}>\r\n        <>\r\n          <Toolbar search={setSearch} />\r\n          <Box mt={3}>\r\n            {loading ? (\r\n              \"\"\r\n            ) : (\r\n              <Card>\r\n                <PerfectScrollbar>\r\n                  <Box minWidth={300}>\r\n                    <Table>\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Nome</TableCell>\r\n\r\n                          <TableCell>Autor</TableCell>\r\n                          <TableCell>Volume</TableCell>\r\n                          <TableCell>Categoria</TableCell>\r\n                          <TableCell></TableCell>\r\n                          <TableCell></TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {data.paginateBooks.docs.slice(0, limit).map((book) => (\r\n                          <TableRow hover key={book.id}>\r\n                            <TableCell>\r\n                              <Box alignItems=\"center\" display=\"flex\">\r\n                                <Typography color=\"textPrimary\" variant=\"body1\">\r\n                                  {book.name}\r\n                                </Typography>\r\n                              </Box>\r\n                            </TableCell>\r\n                            <TableCell>{book.author}</TableCell>\r\n                            <TableCell>{book.volume}</TableCell>\r\n                            <TableCell>{book.category.name}</TableCell>\r\n                            <TableCell>\r\n                              <Link to={\"/app/copies/\" + book.id}>\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  variant=\"contained\"\r\n                                  size=\"small\"\r\n                                >\r\n                                  Exemplares\r\n                                </Button>\r\n                              </Link>\r\n                            </TableCell>\r\n                            <TableCell className={classes.endCell}>\r\n                              <Modal className={classes.icon} icon={TrashIcon}>\r\n                                <CardHeader\r\n                                  subheader={\r\n                                    'Tem certeza que deseja deletar o livro \"' +\r\n                                    book.name +\r\n                                    '\"'\r\n                                  }\r\n                                  title=\"Deletar livro\"\r\n                                />\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  style={{\r\n                                    margin: 10,\r\n                                    backgroundColor: \"#8B0000\",\r\n                                    color: \"#fff\",\r\n                                  }}\r\n                                  onClick={() => deleteBook(book.id)}\r\n                                >\r\n                                  Deletar\r\n                                </Button>\r\n                              </Modal>\r\n                              <Link\r\n                                to={\"/app/books/edit/\" + book.id}\r\n                                style={{ color: \"#263238\" }}\r\n                              >\r\n                                <EditIcon className={classes.icon} />\r\n                              </Link>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Box>\r\n                </PerfectScrollbar>\r\n                <TablePagination\r\n                  component=\"div\"\r\n                  count={data.paginateBooks.total}\r\n                  onChangePage={handlePageChange}\r\n                  onChangeRowsPerPage={handleLimitChange}\r\n                  page={page - 1}\r\n                  rowsPerPage={limit}\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  labelRowsPerPage={\"Itens por página:\"}\r\n                />\r\n              </Card>\r\n            )}\r\n          </Box>\r\n        </>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default BooksList;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\StudentsList\\ListView\\index.js",["477","478","479","480","481"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport Page from \"src/components/Page\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport { StudentsQuery } from \"../../../graphql/queries/student\";\r\nimport { StudentDelete, StudentEdit } from \"../../../graphql/mutations/student\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Modal from \"../../../components/ModalIcon\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Container,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  CardHeader,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Trash2 as TrashIcon, Edit as EditIcon } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n    whiteSpace: \"nowrap\",\r\n    overflowX: \"auto\",\r\n  },\r\n  icon: {\r\n    margin: \"0 10px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  endCell: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst StudentsList = (props) => {\r\n  const classes = useStyles();\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { loading, error, data } = useQuery(StudentsQuery, {\r\n    variables: { input: { page: page, paginate: limit, search } },\r\n  });\r\n  const [mutationDelete] = useMutation(StudentDelete, {\r\n    refetchQueries: [\r\n      {\r\n        query: StudentsQuery,\r\n        variables: { input: { page: page, paginate: limit, search } },\r\n      },\r\n    ],\r\n  });\r\n\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage + 1);\r\n  };\r\n  const deleteStudent = (id) => {\r\n    mutationDelete({ variables: { id } });\r\n  };\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Estudantes\">\r\n      <Container maxWidth={false}>\r\n        <Toolbar search={setSearch} />\r\n        <Box mt={3}>\r\n          {loading ? (\r\n            \"\"\r\n          ) : (\r\n            <Card>\r\n              <PerfectScrollbar>\r\n                <Box minWidth={300}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Nome</TableCell>\r\n                        <TableCell>E-mail</TableCell>\r\n                        <TableCell>Matricula</TableCell>\r\n                        <TableCell>Curso</TableCell>\r\n                        <TableCell>Turma</TableCell>\r\n                        <TableCell></TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {data.paginateStudents.docs\r\n                        .slice(0, limit)\r\n                        .map((student) => (\r\n                          <TableRow hover key={student.id}>\r\n                            <TableCell>\r\n                              <Box alignItems=\"center\" display=\"flex\">\r\n                                <Typography color=\"textPrimary\" variant=\"body1\">\r\n                                  {student.name}\r\n                                </Typography>\r\n                              </Box>\r\n                            </TableCell>\r\n                            <TableCell>{student.email}</TableCell>\r\n                            <TableCell>{student.matriculation}</TableCell>\r\n                            <TableCell>{student.course.name}</TableCell>\r\n                            <TableCell>{student.classes.name}</TableCell>\r\n\r\n                            <TableCell className={classes.endCell}>\r\n                              <Modal className={classes.icon} icon={TrashIcon}>\r\n                                <CardHeader\r\n                                  subheader={\r\n                                    'Tem certeza que deseja deletar o estudante \"' +\r\n                                    student.name +\r\n                                    '\"'\r\n                                  }\r\n                                  title=\"Deletar estudante\"\r\n                                />\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  style={{\r\n                                    margin: 10,\r\n                                    backgroundColor: \"#8B0000\",\r\n                                    color: \"#fff\",\r\n                                  }}\r\n                                  onClick={() => deleteStudent(student.id)}\r\n                                >\r\n                                  Deletar\r\n                                </Button>\r\n                              </Modal>\r\n\r\n                              <Link\r\n                                to={\"/app/students/edit/\" + student.id}\r\n                                style={{ color: \"#263238\" }}\r\n                              >\r\n                                <EditIcon className={classes.icon} />\r\n                              </Link>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Box>\r\n              </PerfectScrollbar>\r\n              <TablePagination\r\n                component=\"div\"\r\n                count={data.paginateStudents.total}\r\n                onChangePage={handlePageChange}\r\n                onChangeRowsPerPage={handleLimitChange}\r\n                page={page - 1}\r\n                rowsPerPage={limit}\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                labelRowsPerPage={\"Itens por página:\"}\r\n              />\r\n            </Card>\r\n          )}\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default StudentsList;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\auth\\index.js",["482","483","484","485","486","487"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport Page from \"src/components/Page\";\r\nimport Login from \"./LoginView\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\nconst LoginView = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Page className={classes.root} title=\"Login\">\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Login />\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksList\\ListView\\EditBookDetails\\index.js",["488","489","490","491","492","493","494","495"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { BooksEdit } from \"../../../../graphql/mutations/book\";\r\nimport useMyForm from \"../../../../hooks/MyForm\";\r\nimport fields from \"./fields\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { AllCategoriesQuery } from \"../../../../graphql/queries/category\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { BookQuery, BooksQuery } from \"src/graphql/queries/book\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n}));\r\n\r\nconst BookDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  var history = useHistory();\r\n  const {\r\n    fields: input,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    setTouched,\r\n    reset,\r\n    setValues,\r\n  } = useMyForm(fields);\r\n  var { id } = useParams();\r\n  const { loading, error, data } = useQuery(BookQuery, {\r\n    variables: { id: id },\r\n  });\r\n  var values = {\r\n    name: \"\",\r\n    author: \"\",\r\n    volume: \"\",\r\n    categoryId: \"\",\r\n  };\r\n  if (!loading) {\r\n    values = { categoryId: parseInt(data.book.category.id), ...data.book };\r\n  }\r\n  const onCompleted = useCallback(\r\n    (response) => {\r\n      setValues(values);\r\n    },\r\n    [setValues]\r\n  );\r\n  useEffect(() => {\r\n    onCompleted();\r\n  }, [loading]);\r\n\r\n  const [mutationEdit] = useMutation(BooksEdit, {\r\n    refetchQueries: [\r\n      {\r\n        query: BooksQuery,\r\n        variables: { input: { page: 1, paginate: 10, search: \"\" } },\r\n      },\r\n    ],\r\n  });\r\n  const editBook = async (data) => {\r\n    const { id, ...rest } = data;\r\n    await mutationEdit({ variables: { id: data.id, input: { ...rest } } });\r\n    history.push(\"/app/books\");\r\n  };\r\n  const categories = useQuery(AllCategoriesQuery);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(editBook)}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Box mt={3}>\r\n          <Card>\r\n            <CardHeader\r\n              subheader=\"Você pode editar as informações do livro.\"\r\n              title=\"Livro\"\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  <input type=\"hidden\" name=\"id\" value={id} />\r\n                  <TextField\r\n                    error={!!errors.name}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.name ? errors.name : \"Informe o título do livro\"\r\n                    }\r\n                    label={input.name.label}\r\n                    name=\"name\"\r\n                    type={input.name.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.name.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.author}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.author\r\n                        ? errors.author\r\n                        : \"Informe o autor do livro\"\r\n                    }\r\n                    label={input.author.label}\r\n                    name=\"author\"\r\n                    type={input.author.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.author.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.volume}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.volume\r\n                        ? errors.volume\r\n                        : \"Informe o volume do livro\"\r\n                    }\r\n                    label={input.volume.label}\r\n                    name=\"volume\"\r\n                    type={input.volume.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.volume.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={6} xs={12}>\r\n                  {categories.loading ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <Autocomplete\r\n                      name=\"categoryId\"\r\n                      options={categories.data.categories.map(\r\n                        ({ id, name }) => ({ value: id, label: name })\r\n                      )}\r\n                      onChange={(event, value) => {\r\n                        if (!value) {\r\n                          handleChange({ name: \"categoryId\", value: \"\" });\r\n                        } else {\r\n                          handleChange({\r\n                            name: \"categoryId\",\r\n                            value: parseInt(value.value),\r\n                          });\r\n                        }\r\n                      }}\r\n                      value={\r\n                        input.categoryId.value == \"\"\r\n                          ? { value: \"\", label: \"\" }\r\n                          : {\r\n                              value: \"\" + input.categoryId.value,\r\n                              label: categories.data.categories.find(\r\n                                (s) => s.id === \"\" + input.categoryId.value\r\n                              ).name,\r\n                            }\r\n                      }\r\n                      getOptionLabel={(option) => option.label}\r\n                      getOptionSelected={(option, value) =>\r\n                        option.id === value.id\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label={input.categoryId.label}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          error={!!errors.categoryId}\r\n                          helperText={\r\n                            !!errors.categoryId\r\n                              ? errors.categoryId\r\n                              : \"Informe a categoria do livro\"\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n              <Link to=\"/app/books\">\r\n                <Button\r\n                  style={{\r\n                    marginRight: 10,\r\n                    backgroundColor: \"#8B0000\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n              </Link>\r\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                Editar\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BookDetails;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\StudentsList\\ListView\\CreateStudentsDetails\\index.js",["496","497","498","499","500","501"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { StudentCreate } from \"../../../../graphql/mutations/student\";\r\nimport { StudentsQuery } from \"../../../../graphql/queries/student\";\r\nimport { AllClassesQuery } from \"../../../../graphql/queries/class\";\r\nimport { AllCoursesQuery } from \"../../../../graphql/queries/course\";\r\nimport useMyForm from \"../../../../hooks/MyForm\";\r\nimport fields from \"./fields\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n}));\r\n\r\nconst StudentDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  var history = useHistory();\r\n\r\n  const {\r\n    fields: input,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    setTouched,\r\n    reset,\r\n    setValues,\r\n  } = useMyForm(fields);\r\n  const [mutationCreate] = useMutation(StudentCreate, {\r\n    refetchQueries: [\r\n      {\r\n        query: StudentsQuery,\r\n        variables: { input: { page: 1, paginate: 10, search: \"\" } },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const createStudent = async (data) => {\r\n    await mutationCreate({ variables: { input: data } });\r\n    history.push(\"/app/students\");\r\n  };\r\n\r\n  const courses = useQuery(AllCoursesQuery);\r\n  const classesRoom = useQuery(AllClassesQuery);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(createStudent)}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Box mt={3}>\r\n          <Card>\r\n            <CardHeader\r\n              subheader=\"Você pode cadastrar as informações de um estudante.\"\r\n              title=\"Estudante\"\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.name}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.name\r\n                        ? errors.name\r\n                        : \"Informe o nome do estudante\"\r\n                    }\r\n                    label={input.name.label}\r\n                    name=\"name\"\r\n                    type={input.name.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.name.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.email}\r\n                    fullWidth\r\n                    helperText={errors.email}\r\n                    label={input.email.label}\r\n                    name=\"email\"\r\n                    type={input.email.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.email.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.matriculation}\r\n                    fullWidth\r\n                    helperText={errors.matriculation}\r\n                    label={input.matriculation.label}\r\n                    name=\"matriculation\"\r\n                    type={input.matriculation.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.matriculation.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  {courses.loading ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <Autocomplete\r\n                      name=\"courseId\"\r\n                      options={courses.data.courses.map(({ id, name }) => ({\r\n                        value: id,\r\n                        label: name,\r\n                      }))}\r\n                      onChange={(event, value) => {\r\n                        if (!value) {\r\n                          handleChange({ name: \"courseId\", value: \"\" });\r\n                        } else {\r\n                          handleChange({\r\n                            name: \"courseId\",\r\n                            value: parseInt(value.value),\r\n                          });\r\n                        }\r\n                      }}\r\n                      getOptionLabel={(option) => option.label}\r\n                      getOptionSelected={(option, value) =>\r\n                        option.id === value.id\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label={input.courseId.label}\r\n                          variant=\"outlined\"\r\n                          error={!!errors.courseId}\r\n                          helperText={\r\n                            !!errors.courseId\r\n                              ? errors.courseId\r\n                              : \"Informe o curso do estudante\"\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  {classesRoom.loading ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <Autocomplete\r\n                      name=\"classId\"\r\n                      options={classesRoom.data.classes.map(({ id, name }) => ({\r\n                        value: id,\r\n                        label: name,\r\n                      }))}\r\n                      onChange={(event, value) => {\r\n                        if (!value) {\r\n                          handleChange({ name: \"classId\", value: \"\" });\r\n                        } else {\r\n                          handleChange({\r\n                            name: \"classId\",\r\n                            value: parseInt(value.value),\r\n                          });\r\n                        }\r\n                      }}\r\n                      getOptionLabel={(option) => option.label}\r\n                      getOptionSelected={(option, value) =>\r\n                        option.id === value.id\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label={input.classId.label}\r\n                          variant=\"outlined\"\r\n                          error={!!errors.classId}\r\n                          helperText={\r\n                            !!errors.classId\r\n                              ? errors.classId\r\n                              : \"Informe a turma do estudante\"\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n              <Link to=\"/app/students\">\r\n                <Button\r\n                  style={{\r\n                    marginRight: 10,\r\n                    backgroundColor: \"#8B0000\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n              </Link>\r\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                Cadastrar\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default StudentDetails;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksList\\ListView\\CreateBooksDetails\\index.js",["502","503","504","505","506","507"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { BooksCreate } from \"../../../../graphql/mutations/book\";\r\nimport { CopyCreate } from \"../../../../graphql/mutations/copy\";\r\nimport { AllCategoriesQuery } from \"../../../../graphql/queries/category\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { BooksQuery } from \"src/graphql/queries/book\";\r\nimport useMyForm from \"../../../../hooks/MyForm\";\r\nimport fields from \"./fields\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n}));\r\n\r\nconst BookDetails = ({ className, ...rest }) => {\r\n  var history = useHistory();\r\n  const classes = useStyles();\r\n  const {\r\n    fields: input,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    setTouched,\r\n    reset,\r\n    setValues,\r\n  } = useMyForm(fields);\r\n\r\n  const [mutationCreate] = useMutation(BooksCreate, {\r\n    refetchQueries: [\r\n      {\r\n        query: BooksQuery,\r\n        variables: { input: { page: 1, paginate: 10, search: \"\" } },\r\n      },\r\n    ],\r\n  });\r\n  const [mutationCreateCopy] = useMutation(CopyCreate);\r\n  const categories = useQuery(AllCategoriesQuery);\r\n  const createBook = async (data) => {\r\n    var { quantity } = data;\r\n    quantity = parseInt(quantity);\r\n    delete data.quantity;\r\n\r\n    let book = await mutationCreate({ variables: { input: data } });\r\n    for (let i = 0; i < quantity; i++) {\r\n      await mutationCreateCopy({\r\n        variables: {\r\n          input: {\r\n            status: \"AVAILABLE\",\r\n            bookId: parseInt(book.data.createBook.id),\r\n          },\r\n        },\r\n      });\r\n    }\r\n    history.push(\"/app/books\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(createBook)}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Box mt={3}>\r\n          <Card>\r\n            <CardHeader\r\n              subheader=\"Você pode cadastrar as informações de um livro.\"\r\n              title=\"Livro\"\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.name}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.name ? errors.name : \"Informe o título do livro\"\r\n                    }\r\n                    label={input.name.label}\r\n                    name=\"name\"\r\n                    type={input.name.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.name.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.author}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.author\r\n                        ? errors.author\r\n                        : \"Informe o autor do livro\"\r\n                    }\r\n                    label={input.author.label}\r\n                    name=\"author\"\r\n                    type={input.author.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.author.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.volume}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.volume\r\n                        ? errors.volume\r\n                        : \"Informe o volume do livro\"\r\n                    }\r\n                    label={input.volume.label}\r\n                    name=\"volume\"\r\n                    type={input.volume.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.volume.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  {categories.loading ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <Autocomplete\r\n                      name=\"categoryId\"\r\n                      options={categories.data.categories.map(\r\n                        ({ id, name }) => ({ value: id, label: name })\r\n                      )}\r\n                      onChange={(event, value) => {\r\n                        if (!value) {\r\n                          handleChange({ name: \"categoryId\", value: \"\" });\r\n                        } else {\r\n                          handleChange({\r\n                            name: \"categoryId\",\r\n                            value: parseInt(value.value),\r\n                          });\r\n                        }\r\n                      }}\r\n                      getOptionLabel={(option) => option.label}\r\n                      getOptionSelected={(option, value) =>\r\n                        option.id === value.id\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label={input.categoryId.label}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          error={!!errors.categoryId}\r\n                          helperText={\r\n                            !!errors.categoryId\r\n                              ? errors.categoryId\r\n                              : \"Informe a categoria do livro\"\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    helperText=\"Informe a quantidade de exemplares do livro\"\r\n                    label={input.quantity.label}\r\n                    name=\"quantity\"\r\n                    type={input.quantity.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.quantity.value}\r\n                    variant=\"outlined\"\r\n                    inputProps={{ min: 0 }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n              <Link to=\"/app/books\">\r\n                <Button\r\n                  style={{\r\n                    marginRight: 10,\r\n                    backgroundColor: \"#8B0000\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n              </Link>\r\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                Cadastrar\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BookDetails;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\StudentsList\\ListView\\EditStudentsDetails\\index.js",["508","509","510","511","512","513","514","515","516","517"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport useMyForm from \"../../../../hooks/MyForm\";\r\nimport fields from \"./fields\";\r\nimport { StudentEdit } from \"../../../../graphql/mutations/student\";\r\nimport {\r\n  StudentsQuery,\r\n  StudentQuery,\r\n} from \"../../../../graphql/queries/student\";\r\nimport { AllClassesQuery } from \"../../../../graphql/queries/class\";\r\nimport { AllCoursesQuery } from \"../../../../graphql/queries/course\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n}));\r\n\r\nconst StudentDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  var history = useHistory();\r\n\r\n  const {\r\n    fields: input,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    setTouched,\r\n    reset,\r\n    setValues,\r\n  } = useMyForm(fields);\r\n\r\n  var { id } = useParams();\r\n\r\n  const { loading, error, data } = useQuery(StudentQuery, {\r\n    variables: { id: id },\r\n  });\r\n\r\n  const courses = useQuery(AllCoursesQuery);\r\n  const classesRoom = useQuery(AllClassesQuery);\r\n\r\n  console.log(classesRoom);\r\n\r\n  var values = {\r\n    name: \"\",\r\n    email: \"\",\r\n    matriculation: \"\",\r\n    course_id: \"\",\r\n    class_id: \"\",\r\n  };\r\n\r\n  if (!loading) {\r\n    values = {\r\n      id: data.student.id,\r\n      name: data.student.name,\r\n      email: data.student.email,\r\n      matriculation: data.student.matriculation,\r\n      courseId: parseInt(data.student.course.id),\r\n      classId: parseInt(data.student.classes.id),\r\n    };\r\n  }\r\n\r\n  const onCompleted = useCallback(\r\n    (response) => {\r\n      setValues(values);\r\n    },\r\n    [setValues]\r\n  );\r\n  useEffect(() => {\r\n    onCompleted();\r\n  }, [loading]);\r\n\r\n  const [mutationEdit] = useMutation(StudentEdit, {\r\n    refetchQueries: [\r\n      {\r\n        query: StudentsQuery,\r\n        variables: { input: { page: 1, paginate: 10, search: \"\" } },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const editStudent = async (data) => {\r\n    const { id, ...rest } = data;\r\n    await mutationEdit({ variables: { id: id, input: { ...rest } } });\r\n    history.push(\"/app/students\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(editStudent)}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Box mt={3}>\r\n          <Card>\r\n            <CardHeader\r\n              subheader=\"Você pode cadastrar as informações de um estudante.\"\r\n              title=\"Estudante\"\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.name}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.name\r\n                        ? errors.name\r\n                        : \"Informe o nome do estudante\"\r\n                    }\r\n                    label={input.name.label}\r\n                    name=\"name\"\r\n                    type={input.name.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.name.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.email}\r\n                    fullWidth\r\n                    helperText={errors.email}\r\n                    label={input.email.label}\r\n                    name=\"email\"\r\n                    type={input.email.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.email.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.matriculation}\r\n                    fullWidth\r\n                    helperText={errors.matriculation}\r\n                    label={input.matriculation.label}\r\n                    name=\"matriculation\"\r\n                    type={input.matriculation.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.matriculation.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  {courses.loading ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <Autocomplete\r\n                      name=\"courseId\"\r\n                      options={courses.data.courses.map(({ id, name }) => ({\r\n                        value: id,\r\n                        label: name,\r\n                      }))}\r\n                      onChange={(event, value) => {\r\n                        if (!value) {\r\n                          handleChange({ name: \"courseId\", value: \"\" });\r\n                        } else {\r\n                          handleChange({\r\n                            name: \"courseId\",\r\n                            value: parseInt(value.value),\r\n                          });\r\n                        }\r\n                      }}\r\n                      getOptionLabel={(option) => option.label}\r\n                      getOptionSelected={(option, value) =>\r\n                        option.id === value.id\r\n                      }\r\n                      value={\r\n                        input.courseId.value == \"\"\r\n                          ? { value: \"\", label: \"\" }\r\n                          : {\r\n                              value: \"\" + input.courseId.value,\r\n                              label: courses.data.courses.find(\r\n                                (s) => s.id === \"\" + input.courseId.value\r\n                              ).name,\r\n                            }\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label={input.courseId.label}\r\n                          variant=\"outlined\"\r\n                          error={!!errors.courseId}\r\n                          helperText={\r\n                            !!errors.courseId\r\n                              ? errors.courseId\r\n                              : \"Informe o curso do estudante\"\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  {classesRoom.loading ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <Autocomplete\r\n                      name=\"classId\"\r\n                      options={classesRoom.data.classes.map(\r\n                        ({ id, name, course }) => ({ value: id, label: name })\r\n                      )}\r\n                      onChange={(event, value) => {\r\n                        if (!value) {\r\n                          handleChange({ name: \"classId\", value: \"\" });\r\n                        } else {\r\n                          handleChange({\r\n                            name: \"classId\",\r\n                            value: parseInt(value.value),\r\n                          });\r\n                        }\r\n                      }}\r\n                      getOptionLabel={(option) => option.label}\r\n                      getOptionSelected={(option, value) =>\r\n                        option.id === value.id\r\n                      }\r\n                      value={\r\n                        input.classId.value == \"\"\r\n                          ? { value: \"\", label: \"\" }\r\n                          : {\r\n                              value: \"\" + input.classId.value,\r\n                              label: classesRoom.data.classes.find(\r\n                                (s) => s.id === \"\" + input.classId.value\r\n                              ).name,\r\n                            }\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label={input.classId.label}\r\n                          variant=\"outlined\"\r\n                          error={!!errors.classId}\r\n                          helperText={\r\n                            !!errors.classId\r\n                              ? errors.classId\r\n                              : \"Informe a turma do estudante\"\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n              <Link to=\"/app/students\">\r\n                <Button\r\n                  style={{\r\n                    marginRight: 10,\r\n                    backgroundColor: \"#8B0000\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n              </Link>\r\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                Cadastrar\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default StudentDetails;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksCategoryList\\ListView\\CreateCategoryDetails\\index.js",["518","519","520","521","522","523","524"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { CategoryCreate } from \"../../../../graphql/mutations/category\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { CategoriesQuery } from \"src/graphql/queries/category\";\r\nimport useMyForm from \"../../../../hooks/MyForm\";\r\nimport fields from \"./fields\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n}));\r\nconst CategoryDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  var history = useHistory();\r\n  const {\r\n    fields: input,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    setTouched,\r\n    reset,\r\n    setValues,\r\n  } = useMyForm(fields);\r\n\r\n  const [mutationCreate] = useMutation(CategoryCreate, {\r\n    refetchQueries: [\r\n      {\r\n        query: CategoriesQuery,\r\n        variables: { input: { page: 1, paginate: 10, search: \"\" } },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const createCategory = async (data) => {\r\n    await mutationCreate({ variables: { input: data } });\r\n    history.push(\"/app/category\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(createCategory)}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Box mt={3}>\r\n          <Card>\r\n            <CardHeader\r\n              subheader=\"Você pode cadastrar as informações de categoria de livro.\"\r\n              title=\"Categoria de Livro\"\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.name}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.name\r\n                        ? errors.name\r\n                        : \"Informe o nome da categoria do livro\"\r\n                    }\r\n                    label={input.name.label}\r\n                    name=\"name\"\r\n                    type={input.name.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.name.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n              <Link to=\"/app/category\">\r\n                <Button\r\n                  style={{\r\n                    marginRight: 10,\r\n                    backgroundColor: \"#8B0000\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n              </Link>\r\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                Cadastrar\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CategoryDetails;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksCategoryList\\ListView\\index.js",["525","526","527","528","529"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport Page from \"src/components/Page\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport { CategoriesQuery } from \"../../../graphql/queries/category\";\r\nimport { BooksQuery } from \"../../../graphql/queries/book\";\r\nimport {\r\n  CategoryCreate,\r\n  CategoryDelete,\r\n  CategoryEdit,\r\n} from \"../../../graphql/mutations/category\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Modal from \"../../../components/ModalIcon\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Container,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  CardHeader,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Trash2 as TrashIcon, Edit as EditIcon } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n    whiteSpace: \"nowrap\",\r\n    overflowX: \"auto\",\r\n  },\r\n  icon: {\r\n    margin: \"0 10px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  endCell: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst CategoryList = (props) => {\r\n  const classes = useStyles();\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { loading, error, data } = useQuery(CategoriesQuery, {\r\n    variables: { input: { page: page, paginate: limit, search } },\r\n  });\r\n  const [mutationDelete] = useMutation(CategoryDelete, {\r\n    refetchQueries: [\r\n      {\r\n        query: CategoriesQuery,\r\n        variables: { input: { page: page, paginate: limit, search } },\r\n      },\r\n      {\r\n        query: BooksQuery,\r\n        variables: { input: { page: page, paginate: limit, search } },\r\n      },\r\n    ],\r\n  });\r\n\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage + 1);\r\n  };\r\n  const deleteCategory = (id) => {\r\n    mutationDelete({ variables: { id } });\r\n  };\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Categorias de Livros\">\r\n      <Container maxWidth={false}>\r\n        <Toolbar search={setSearch} />\r\n        <Box mt={3}>\r\n          {loading ? (\r\n            \"\"\r\n          ) : (\r\n            <Card>\r\n              <PerfectScrollbar>\r\n                <Box minWidth={300}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Categoria</TableCell>\r\n\r\n                        <TableCell></TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {data.paginateCategories.docs\r\n                        .slice(0, limit)\r\n                        .map((category) => (\r\n                          <TableRow hover key={category.id}>\r\n                            <TableCell>\r\n                              <Box alignItems=\"center\" display=\"flex\">\r\n                                <Typography color=\"textPrimary\" variant=\"body1\">\r\n                                  {category.name}\r\n                                </Typography>\r\n                              </Box>\r\n                            </TableCell>\r\n                            <TableCell className={classes.endCell}>\r\n                              <Modal className={classes.icon} icon={TrashIcon}>\r\n                                <CardHeader\r\n                                  subheader={\r\n                                    'Tem certeza que deseja deletar a categoria \"' +\r\n                                    category.name +\r\n                                    '\"'\r\n                                  }\r\n                                  title=\"Deletar categoria\"\r\n                                />\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  style={{\r\n                                    margin: 10,\r\n                                    backgroundColor: \"#8B0000\",\r\n                                    color: \"#fff\",\r\n                                  }}\r\n                                  onClick={() => deleteCategory(category.id)}\r\n                                >\r\n                                  Deletar\r\n                                </Button>\r\n                              </Modal>\r\n\r\n                              <Link\r\n                                style={{ color: \"#263238\" }}\r\n                                to={\"/app/category/edit/\" + category.id}\r\n                              >\r\n                                <EditIcon className={classes.icon} />\r\n                              </Link>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Box>\r\n              </PerfectScrollbar>\r\n              <TablePagination\r\n                component=\"div\"\r\n                count={data.paginateCategories.total}\r\n                onChangePage={handlePageChange}\r\n                onChangeRowsPerPage={handleLimitChange}\r\n                page={page - 1}\r\n                rowsPerPage={limit}\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                labelRowsPerPage={\"Itens por página:\"}\r\n              />\r\n            </Card>\r\n          )}\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CategoryList;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksCategoryList\\ListView\\EditCategoryDetails\\index.js",["530","531","532","533","534","535","536"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { CategoryEdit } from \"../../../../graphql/mutations/category\";\r\nimport useMyForm from \"../../../../hooks/MyForm\";\r\nimport fields from \"./fields\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { CategoryQuery, CategoriesQuery } from \"src/graphql/queries/category\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n}));\r\n\r\nconst CategoryDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  var history = useHistory();\r\n  const {\r\n    fields: input,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    setTouched,\r\n    reset,\r\n    setValues,\r\n  } = useMyForm(fields);\r\n  var { id } = useParams();\r\n  const { loading, error, data } = useQuery(CategoryQuery, {\r\n    variables: { id: id },\r\n  });\r\n  var values = {\r\n    name: \"\",\r\n  };\r\n  if (!loading) {\r\n    values = data.category;\r\n  }\r\n  const onCompleted = useCallback(\r\n    (response) => {\r\n      setValues(values);\r\n    },\r\n    [setValues]\r\n  );\r\n  useEffect(() => {\r\n    onCompleted();\r\n  }, [values]);\r\n\r\n  const [mutationEdit] = useMutation(CategoryEdit, {\r\n    refetchQueries: [\r\n      {\r\n        query: CategoriesQuery,\r\n        variables: { input: { page: 1, paginate: 10, search: \"\" } },\r\n      },\r\n    ],\r\n  });\r\n  const editCategory = async (data) => {\r\n    const { id, ...rest } = data;\r\n    await mutationEdit({ variables: { id: data.id, input: { ...rest } } });\r\n    history.push(\"/app/category\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(editCategory)}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Box mt={3}>\r\n          <Card>\r\n            <CardHeader\r\n              subheader=\"Você pode editar as informações da categoria.\"\r\n              title=\"Categoria de Livro\"\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  <input type=\"hidden\" name=\"id\" value={id} />\r\n                  <TextField\r\n                    error={!!errors.name}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.name\r\n                        ? errors.name\r\n                        : \"Informe o nome da categoria do livro\"\r\n                    }\r\n                    label={input.name.label}\r\n                    name=\"name\"\r\n                    type={input.name.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.name.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n              <Link to=\"/app/category\">\r\n                <Button\r\n                  style={{\r\n                    marginRight: 10,\r\n                    backgroundColor: \"#8B0000\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n              </Link>\r\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                Editar\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CategoryDetails;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\ClassesList\\ListView\\index.js",["537","538","539","540","541","542","543","544"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport Page from \"src/components/Page\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport ClassesDetails from \"./EditClassesDetails\";\r\nimport CreateClasses from \"./CreateClassesDetails/index\";\r\nimport { ClassesQuery } from \"../../../graphql/queries/class\";\r\nimport {\r\n  ClassCreate,\r\n  ClassDelete,\r\n  ClassEdit,\r\n} from \"../../../graphql/mutations/class\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Modal from \"../../../components/ModalIcon\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Container,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  CardHeader,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Trash2 as TrashIcon, Edit as EditIcon } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n    whiteSpace: \"nowrap\",\r\n    overflowX: \"auto\",\r\n  },\r\n  icon: {\r\n    margin: \"0 10px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  endCell: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst ClassesList = (props) => {\r\n  const classes = useStyles();\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { loading, error, data } = useQuery(ClassesQuery, {\r\n    variables: { input: { page: page, paginate: limit, search } },\r\n  });\r\n\r\n  const [mutationDelete] = useMutation(ClassDelete, {\r\n    refetchQueries: [\r\n      {\r\n        query: ClassesQuery,\r\n        variables: { input: { page: page, paginate: limit, search } },\r\n      },\r\n    ],\r\n  });\r\n\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage + 1);\r\n  };\r\n\r\n  const deleteClass = (id) => {\r\n    mutationDelete({ variables: { id } });\r\n  };\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Turmas\">\r\n      <Container maxWidth={false}>\r\n        <Toolbar search={setSearch} />\r\n        <Box mt={3}>\r\n          {loading ? (\r\n            \"\"\r\n          ) : (\r\n            <Card>\r\n              <PerfectScrollbar>\r\n                <Box minWidth={300}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Nome</TableCell>\r\n                        <TableCell>Curso</TableCell>\r\n                        <TableCell></TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {data.paginateClasses.docs\r\n                        .slice(0, limit)\r\n                        .map((objClasses) => (\r\n                          <TableRow hover key={objClasses.id}>\r\n                            <TableCell>\r\n                              <Box alignItems=\"center\" display=\"flex\">\r\n                                <Typography color=\"textPrimary\" variant=\"body1\">\r\n                                  {objClasses.name}\r\n                                </Typography>\r\n                              </Box>\r\n                            </TableCell>\r\n                            <TableCell>{objClasses.course.name}</TableCell>\r\n                            <TableCell className={classes.endCell}>\r\n                              <Modal className={classes.icon} icon={TrashIcon}>\r\n                                <CardHeader\r\n                                  subheader={\r\n                                    'Tem certeza que deseja deletar a turma \"' +\r\n                                    objClasses.name +\r\n                                    '\"'\r\n                                  }\r\n                                  title=\"Deletar turma\"\r\n                                />\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  style={{\r\n                                    margin: 10,\r\n                                    backgroundColor: \"#8B0000\",\r\n                                    color: \"#fff\",\r\n                                  }}\r\n                                  onClick={() => deleteClass(objClasses.id)}\r\n                                >\r\n                                  Deletar\r\n                                </Button>\r\n                              </Modal>\r\n\r\n                              <Link\r\n                                to={\"/app/classes/edit/\" + objClasses.id}\r\n                                style={{ color: \"#263238\" }}\r\n                              >\r\n                                <EditIcon className={classes.icon} />\r\n                              </Link>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Box>\r\n              </PerfectScrollbar>\r\n              <TablePagination\r\n                component=\"div\"\r\n                count={data.paginateClasses.total}\r\n                onChangePage={handlePageChange}\r\n                onChangeRowsPerPage={handleLimitChange}\r\n                page={page - 1}\r\n                rowsPerPage={limit}\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                labelRowsPerPage={\"Itens por página:\"}\r\n              />\r\n            </Card>\r\n          )}\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ClassesList;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\UsersList\\ListView\\EditUsersDetails\\index.js",["545","546","547","548","549","550","551"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport useMyForm from \"../../../../hooks/MyForm\";\r\nimport fields from \"./fields\";\r\nimport { UserEdit } from \"../../../../graphql/mutations/user\";\r\nimport { UsersQuery, UserQuery } from \"../../../../graphql/queries/user\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n}));\r\n\r\nconst UserDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  var history = useHistory();\r\n  const {\r\n    fields: input,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    setTouched,\r\n    reset,\r\n    setValues,\r\n  } = useMyForm(fields);\r\n  var { id } = useParams();\r\n  const { loading, error, data } = useQuery(UserQuery, {\r\n    variables: { id: id },\r\n  });\r\n  var values = {\r\n    name: \"\",\r\n    code: \"\",\r\n    author: \"\",\r\n    volume: \"\",\r\n    quantity: 1,\r\n  };\r\n  if (!loading) {\r\n    values = data.user;\r\n  }\r\n  const onCompleted = useCallback(\r\n    (response) => {\r\n      setValues(values);\r\n    },\r\n    [setValues]\r\n  );\r\n  useEffect(() => {\r\n    onCompleted();\r\n  }, [values]);\r\n\r\n  const [mutationEdit] = useMutation(UserEdit, {\r\n    refetchQueries: [\r\n      {\r\n        query: UsersQuery,\r\n        variables: { input: { page: 1, paginate: 10, search: \"\" } },\r\n      },\r\n    ],\r\n  });\r\n  const editUser = async (data) => {\r\n    data.accessLevel = parseInt(data.accessLevel);\r\n    const { id, ...rest } = data;\r\n    await mutationEdit({ variables: { id: data.id, input: { ...rest } } });\r\n    history.push(\"/app/users\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(editUser)}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Box mt={3}>\r\n          <Card>\r\n            <CardHeader\r\n              subheader=\"Você pode editar as informações de um usuário.\"\r\n              title=\"Usuário\"\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  <input type=\"hidden\" name=\"id\" value={id} />\r\n                  <TextField\r\n                    error={!!errors.name}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.name ? errors.name : \"Informe o nome do usuário\"\r\n                    }\r\n                    label={input.name.label}\r\n                    name=\"name\"\r\n                    type={input.name.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.name.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.login}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.login\r\n                        ? errors.login\r\n                        : \"Informe o login do usuário\"\r\n                    }\r\n                    label={input.login.label}\r\n                    name=\"login\"\r\n                    type={input.login.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.login.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.password}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.password\r\n                        ? errors.password\r\n                        : \"Informe a senha do usuário\"\r\n                    }\r\n                    label={input.password.label}\r\n                    name=\"password\"\r\n                    type={input.password.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.password.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.accessLevel}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.accessLevel\r\n                        ? errors.accessLevel\r\n                        : \"Informe o nivel de acesso do usuário\"\r\n                    }\r\n                    label={input.accessLevel.label}\r\n                    name=\"accessLevel\"\r\n                    type={input.accessLevel.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.accessLevel.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n              <Link to=\"/app/users\">\r\n                <Button\r\n                  style={{\r\n                    marginRight: 10,\r\n                    backgroundColor: \"#8B0000\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n              </Link>\r\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                Editar\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\ClassesList\\ListView\\CreateClassesDetails\\index.js",["552","553","554","555","556","557","558","559","560","561"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { ClassesQuery } from \"../../../../graphql/queries/class\";\r\nimport { AllCoursesQuery } from \"../../../../graphql/queries/course\";\r\nimport { ClassCreate } from \"../../../../graphql/mutations/class\";\r\nimport fields from \"./fields\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport useMyForm from \"../../../../hooks/MyForm\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Select,\r\n  InputLabel,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n}));\r\n\r\nconst ClassDetails = ({ className, create, set, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  var history = useHistory();\r\n\r\n  const {\r\n    fields: input,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    setTouched,\r\n    reset,\r\n    setValues,\r\n  } = useMyForm(fields);\r\n\r\n  const [mutationCreate] = useMutation(ClassCreate, {\r\n    refetchQueries: [\r\n      {\r\n        query: ClassesQuery,\r\n        variables: { input: { page: 1, paginate: 10, search: \"\" } },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const courses = useQuery(AllCoursesQuery);\r\n\r\n  const createClass = async (data) => {\r\n    await mutationCreate({ variables: { input: data } });\r\n    history.push(\"/app/classes\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(createClass)}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Box mt={3}>\r\n          <Card>\r\n            <CardHeader\r\n              subheader=\"Você pode cadastrar as informações de uma turma.\"\r\n              title=\"Turma\"\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.name}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.name\r\n                        ? errors.name\r\n                        : \"Informe o nome da turma. Ex: 1º ano\"\r\n                    }\r\n                    label={input.name.label}\r\n                    type={input.name.type}\r\n                    name=\"name\"\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.name.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  {courses.loading ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <Autocomplete\r\n                      name=\"courseId\"\r\n                      options={courses.data.courses.map(({ id, name }) => ({\r\n                        value: id,\r\n                        label: name,\r\n                      }))}\r\n                      onChange={(event, value) => {\r\n                        if (!value) {\r\n                          handleChange({ name: \"courseId\", value: \"\" });\r\n                        } else {\r\n                          handleChange({\r\n                            name: \"courseId\",\r\n                            value: parseInt(value.value),\r\n                          });\r\n                        }\r\n                      }}\r\n                      getOptionLabel={(option) => option.label}\r\n                      getOptionSelected={(option, value) =>\r\n                        option.id === value.id\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label={input.courseId.label}\r\n                          variant=\"outlined\"\r\n                          error={!!errors.courseId}\r\n                          helperText={\r\n                            !!errors.courseId\r\n                              ? errors.courseId\r\n                              : \"Informe o curso da turma\"\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n              <Link to=\"/app/classes\">\r\n                <Button\r\n                  style={{\r\n                    marginRight: 10,\r\n                    backgroundColor: \"#8B0000\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n              </Link>\r\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                Cadastrar\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ClassDetails;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\UsersList\\ListView\\index.js",["562","563","564","565","566","567"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport Page from \"src/components/Page\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport { UsersQuery } from \"../../../graphql/queries/user\";\r\nimport {\r\n  UserCreate,\r\n  UserDelete,\r\n  UserEdit,\r\n} from \"../../../graphql/mutations/user\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Modal from \"../../../components/ModalIcon\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Container,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  CardHeader,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Trash2 as TrashIcon, Edit as EditIcon } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n    whiteSpace: \"nowrap\",\r\n    overflowX: \"auto\",\r\n  },\r\n  icon: {\r\n    margin: \"0 10px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  endCell: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst UsersList = (props) => {\r\n  const classes = useStyles();\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { loading, error, data } = useQuery(UsersQuery, {\r\n    variables: { input: { page: page, paginate: limit, search } },\r\n  });\r\n  const [mutationDelete] = useMutation(UserDelete, {\r\n    refetchQueries: [\r\n      {\r\n        query: UsersQuery,\r\n        variables: { input: { page: page, paginate: limit, search } },\r\n      },\r\n    ],\r\n  });\r\n\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage + 1);\r\n  };\r\n  const deleteUser = (id) => {\r\n    mutationDelete({ variables: { id } });\r\n  };\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Usuários\">\r\n      <Container maxWidth={false}>\r\n        <Toolbar search={setSearch} />\r\n        <Box mt={3}>\r\n          {loading ? (\r\n            \"\"\r\n          ) : (\r\n            <Card>\r\n              <PerfectScrollbar>\r\n                <Box minWidth={300}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Nome</TableCell>\r\n                        <TableCell>Login</TableCell>\r\n                        <TableCell>Nível de acesso</TableCell>\r\n                        <TableCell></TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {data.paginateUsers.docs.slice(0, limit).map((user) => (\r\n                        <TableRow hover key={user.id}>\r\n                          <TableCell>\r\n                            <Box alignItems=\"center\" display=\"flex\">\r\n                              <Typography color=\"textPrimary\" variant=\"body1\">\r\n                                {user.name}\r\n                              </Typography>\r\n                            </Box>\r\n                          </TableCell>\r\n                          <TableCell>{user.login}</TableCell>\r\n                          <TableCell>{user.accessLevel}</TableCell>\r\n\r\n                          <TableCell className={classes.endCell}>\r\n                            <Modal className={classes.icon} icon={TrashIcon}>\r\n                              <CardHeader\r\n                                subheader={\r\n                                  'Tem certeza que deseja deletar o usuário \"' +\r\n                                  user.name +\r\n                                  '\"'\r\n                                }\r\n                                title=\"Deletar usuário\"\r\n                              />\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                style={{\r\n                                  margin: 10,\r\n                                  backgroundColor: \"#8B0000\",\r\n                                  color: \"#fff\",\r\n                                }}\r\n                                onClick={() => deleteUser(user.id)}\r\n                              >\r\n                                Deletar\r\n                              </Button>\r\n                            </Modal>\r\n\r\n                            <Link\r\n                              to={\"/app/users/edit/\" + user.id}\r\n                              style={{ color: \"#263238\" }}\r\n                            >\r\n                              <EditIcon className={classes.icon} />\r\n                            </Link>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Box>\r\n              </PerfectScrollbar>\r\n              <TablePagination\r\n                component=\"div\"\r\n                count={data.paginateUsers.total}\r\n                onChangePage={handlePageChange}\r\n                onChangeRowsPerPage={handleLimitChange}\r\n                page={page - 1}\r\n                rowsPerPage={limit}\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                labelRowsPerPage={\"Itens por página:\"}\r\n              />\r\n            </Card>\r\n          )}\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\ClassesList\\ListView\\EditClassesDetails\\index.js",["568","569","570","571","572","573","574","575","576","577"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { ClassQuery, ClassesQuery } from \"../../../../graphql/queries/class\";\r\nimport { AllCoursesQuery } from \"../../../../graphql/queries/course\";\r\nimport { ClassEdit } from \"../../../../graphql/mutations/class\";\r\nimport fields from \"./fields\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport useMyForm from \"../../../../hooks/MyForm\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Select,\r\n  InputLabel,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n}));\r\n\r\nconst ClassDetails = ({ className, details, edit, set, ...rest }) => {\r\n  const classes = useStyles();\r\n  var history = useHistory();\r\n\r\n  const {\r\n    fields: input,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    setTouched,\r\n    reset,\r\n    setValues,\r\n  } = useMyForm(fields);\r\n\r\n  var { id } = useParams();\r\n\r\n  const { loading, error, data } = useQuery(ClassQuery, {\r\n    variables: { id: id },\r\n  });\r\n\r\n  const courses = useQuery(AllCoursesQuery);\r\n\r\n  var values = {\r\n    name: \"\",\r\n    course_id: \"\",\r\n  };\r\n\r\n  if (!loading) {\r\n    values = {\r\n      id: data.classRoom.id,\r\n      name: data.classRoom.name,\r\n      courseId: parseInt(data.classRoom.course.id),\r\n    };\r\n  }\r\n\r\n  const onCompleted = useCallback(\r\n    (response) => {\r\n      setValues(values);\r\n    },\r\n    [setValues]\r\n  );\r\n  useEffect(() => {\r\n    onCompleted();\r\n  }, [loading]);\r\n\r\n  const [mutationEdit] = useMutation(ClassEdit, {\r\n    refetchQueries: [\r\n      {\r\n        query: ClassesQuery,\r\n        variables: { input: { page: 1, paginate: 10, search: \"\" } },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const editClass = async (data) => {\r\n    const { id, ...rest } = data;\r\n    await mutationEdit({ variables: { id: id, input: { ...rest } } });\r\n    history.push(\"/app/classes\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(editClass)}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Box mt={3}>\r\n          <Card>\r\n            <CardHeader\r\n              subheader=\"Você pode editar as informações da turma.\"\r\n              title=\"Turma\"\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  <input type=\"hidden\" name=\"id\" value={id} />\r\n                  <TextField\r\n                    error={!!errors.name}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.name\r\n                        ? errors.name\r\n                        : \"Informe o nome da turma. Ex: 1º ano\"\r\n                    }\r\n                    label={input.name.label}\r\n                    type={input.name.type}\r\n                    name=\"name\"\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.name.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  {courses.loading ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <Autocomplete\r\n                      name=\"courseId\"\r\n                      options={courses.data.courses.map(({ id, name }) => ({\r\n                        value: id,\r\n                        label: name,\r\n                      }))}\r\n                      onChange={(event, value) => {\r\n                        if (!value) {\r\n                          handleChange({ name: \"courseId\", value: \"\" });\r\n                        } else {\r\n                          handleChange({\r\n                            name: \"courseId\",\r\n                            value: parseInt(value.value),\r\n                          });\r\n                        }\r\n                      }}\r\n                      value={\r\n                        input.courseId.value == \"\"\r\n                          ? { value: \"\", label: \"\" }\r\n                          : {\r\n                              value: \"\" + input.courseId.value,\r\n                              label: courses.data.courses.find(\r\n                                (s) => s.id === \"\" + input.courseId.value\r\n                              ).name,\r\n                            }\r\n                      }\r\n                      getOptionLabel={(option) => option.label}\r\n                      getOptionSelected={(option, value) =>\r\n                        option.id === value.id\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label={input.courseId.label}\r\n                          variant=\"outlined\"\r\n                          error={!!errors.courseId}\r\n                          helperText={\r\n                            !!errors.courseId\r\n                              ? errors.courseId\r\n                              : \"Informe o curso da turma\"\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n              <Link to=\"/app/classes\">\r\n                <Button\r\n                  style={{\r\n                    marginRight: 10,\r\n                    backgroundColor: \"#8B0000\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n              </Link>\r\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                Editar\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ClassDetails;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\UsersList\\ListView\\CreateUsersDetails\\index.js",["578","579","580","581","582","583","584"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { UserCreate } from \"../../../../graphql/mutations/user\";\r\nimport { UsersQuery } from \"../../../../graphql/queries/user\";\r\nimport useMyForm from \"../../../../hooks/MyForm\";\r\nimport fields from \"./fields\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n}));\r\n\r\nconst UserDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  var history = useHistory();\r\n  const {\r\n    fields: input,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    setTouched,\r\n    reset,\r\n    setValues,\r\n  } = useMyForm(fields);\r\n  const [mutationCreate] = useMutation(UserCreate, {\r\n    refetchQueries: [\r\n      {\r\n        query: UsersQuery,\r\n        variables: { input: { page: 1, paginate: 10, search: \"\" } },\r\n      },\r\n    ],\r\n  });\r\n  const createUser = (data) => {\r\n    data.accessLevel = parseInt(data.accessLevel);\r\n    mutationCreate({ variables: { input: data } });\r\n    history.push(\"/app/users\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(createUser)}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Box mt={3}>\r\n          <Card>\r\n            <CardHeader\r\n              subheader=\"Você pode cadastrar as informações de um usuário.\"\r\n              title=\"Usuário\"\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.name}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.name ? errors.name : \"Informe o nome do usuário\"\r\n                    }\r\n                    label={input.name.label}\r\n                    name=\"name\"\r\n                    type={input.name.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.name.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.login}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.login\r\n                        ? errors.login\r\n                        : \"Informe o login do usuário\"\r\n                    }\r\n                    label={input.login.label}\r\n                    name=\"login\"\r\n                    type={input.login.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.login.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.password}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.password\r\n                        ? errors.password\r\n                        : \"Informe a senha do usuário\"\r\n                    }\r\n                    label={input.password.label}\r\n                    name=\"password\"\r\n                    type={input.password.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.password.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.accessLevel}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.accessLevel\r\n                        ? errors.accessLevel\r\n                        : \"Informe o nivel de acesso do usuário\"\r\n                    }\r\n                    label={input.accessLevel.label}\r\n                    name=\"accessLevel\"\r\n                    type={input.accessLevel.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.accessLevel.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n              <Link to=\"/app/users\">\r\n                <Button\r\n                  style={{\r\n                    marginRight: 10,\r\n                    backgroundColor: \"#8B0000\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n              </Link>\r\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                Cadastrar\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\LoansList\\ListView\\EditLoansDetails\\index.js",["585","586","587","588","589","590","591","592","593","594","595"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { LoanEdit } from \"../../../../graphql/mutations/loan\";\r\nimport useMyForm from \"../../../../hooks/MyForm\";\r\nimport fields from \"./fields\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { LoanQuery, LoansQuery } from \"src/graphql/queries/loan\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../../providers/Auth\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { AllStudentsQuery } from \"src/graphql/queries/student\";\r\nimport { AvailableCopiesQuery } from \"src/graphql/queries/copy\";\r\nimport { AllPeriodsQuery } from \"src/graphql/queries/period\";\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n}));\r\n\r\nconst LoanDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  var history = useHistory();\r\n  const { auth } = useAuth();\r\n  const {\r\n    fields: input,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    setTouched,\r\n    reset,\r\n    setValues,\r\n  } = useMyForm(fields);\r\n  var { id } = useParams();\r\n  const { loading, error, data } = useQuery(LoanQuery, {\r\n    variables: { id: id },\r\n  });\r\n\r\n  var values = {\r\n    studentId: \"\",\r\n    copyId: \"\",\r\n    periodId: \"\",\r\n  };\r\n  if (!loading) {\r\n    values = {\r\n      id: data.loan.id,\r\n      studentId: parseInt(data.loan.student.id),\r\n      copyId: parseInt(data.loan.copy.id),\r\n      periodId: parseInt(data.loan.period.id),\r\n    };\r\n  }\r\n  const onCompleted = useCallback(\r\n    (response) => {\r\n      setValues(values);\r\n    },\r\n    [setValues]\r\n  );\r\n  useEffect(() => {\r\n    onCompleted();\r\n  }, [loading]);\r\n\r\n  const [mutationEdit] = useMutation(LoanEdit, {\r\n    refetchQueries: [\r\n      {\r\n        query: LoansQuery,\r\n        variables: {\r\n          input: { page: 1, paginate: 10, search: \"\" },\r\n          late: false,\r\n        },\r\n      },\r\n      {\r\n        query: LoansQuery,\r\n        variables: { input: { page: 1, paginate: 10, search: \"\" }, late: true },\r\n      },\r\n      {\r\n        query: AvailableCopiesQuery,\r\n      },\r\n    ],\r\n  });\r\n  const editLoan = async (data) => {\r\n    const { id, ...rest } = data;\r\n    await mutationEdit({ variables: { id: id, input: { ...rest } } });\r\n    history.push(\"/app/loans\");\r\n  };\r\n  const students = useQuery(AllStudentsQuery);\r\n  const copies = useQuery(AvailableCopiesQuery);\r\n  const periods = useQuery(AllPeriodsQuery);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        \"\"\r\n      ) : (\r\n        <form\r\n          onSubmit={handleSubmit(editLoan)}\r\n          className={clsx(classes.root, className)}\r\n          {...rest}\r\n        >\r\n          <Container maxWidth={false}>\r\n            <Box mt={3}>\r\n              <Card>\r\n                <CardHeader\r\n                  subheader=\"Você pode editar as informações de um empréstimo.\"\r\n                  title=\"Empréstimos\"\r\n                />\r\n                <Divider />\r\n                <CardContent>\r\n                  <Grid container spacing={3}>\r\n                    <input type=\"hidden\" name=\"id\" value={id} />\r\n                    <Grid item md={6} xs={12}>\r\n                      {copies.loading ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <Autocomplete\r\n                          name=\"copyId\"\r\n                          options={copies.data.availableCopies.map(\r\n                            ({ id, code }) => ({ value: id, label: code })\r\n                          )}\r\n                          onChange={(event, value) => {\r\n                            if (!value) {\r\n                              handleChange({ name: \"copyId\", value: \"\" });\r\n                            } else {\r\n                              handleChange({\r\n                                name: \"copyId\",\r\n                                value: parseInt(value.value),\r\n                              });\r\n                            }\r\n                          }}\r\n                          value={\r\n                            input.copyId.value == \"\"\r\n                              ? { value: \"\", label: \"\" }\r\n                              : {\r\n                                  value: \"\" + input.copyId.value,\r\n                                  label: copies.data.copies.find(\r\n                                    (s) => s.id === \"\" + input.copyId.value\r\n                                  ).code,\r\n                                }\r\n                          }\r\n                          getOptionLabel={(option) => option.label}\r\n                          getOptionSelected={(option, value) =>\r\n                            option.id === value.id\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label={input.copyId.label}\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              error={!!errors.copyId}\r\n                              helperText={\r\n                                !!errors.copyId\r\n                                  ? errors.copyId\r\n                                  : \"Informe um exemplar\"\r\n                              }\r\n                            />\r\n                          )}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                      {students.loading ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <Autocomplete\r\n                          name=\"studentId\"\r\n                          options={students.data.students.map(\r\n                            ({ id, name }) => ({ value: id, label: name })\r\n                          )}\r\n                          onChange={(event, value) => {\r\n                            if (!value) {\r\n                              handleChange({ name: \"studentId\", value: \"\" });\r\n                            } else {\r\n                              handleChange({\r\n                                name: \"studentId\",\r\n                                value: parseInt(value.value),\r\n                              });\r\n                            }\r\n                          }}\r\n                          value={\r\n                            input.studentId.value == \"\"\r\n                              ? { value: \"\", label: \"\" }\r\n                              : {\r\n                                  value: \"\" + input.studentId.value,\r\n                                  label: students.data.students.find(\r\n                                    (s) => s.id === \"\" + input.studentId.value\r\n                                  ).name,\r\n                                }\r\n                          }\r\n                          getOptionLabel={(option) => option.label}\r\n                          getOptionSelected={(option, value) =>\r\n                            option.id === value.id\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label={input.studentId.label}\r\n                              variant=\"outlined\"\r\n                              error={!!errors.studentId}\r\n                              helperText={\r\n                                !!errors.studentId\r\n                                  ? errors.studentId\r\n                                  : \"Informe um estudante\"\r\n                              }\r\n                            />\r\n                          )}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={3}>\r\n                    <Grid item md={6} xs={12}>\r\n                      {periods.loading ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <Autocomplete\r\n                          name=\"periodId\"\r\n                          options={periods.data.periods.map(({ id, name }) => ({\r\n                            value: id,\r\n                            label: name,\r\n                          }))}\r\n                          onChange={(event, value) => {\r\n                            if (!value) {\r\n                              handleChange({ name: \"periodId\", value: \"\" });\r\n                            } else {\r\n                              handleChange({\r\n                                name: \"periodId\",\r\n                                value: parseInt(value.value),\r\n                              });\r\n                            }\r\n                          }}\r\n                          value={\r\n                            input.periodId.value == \"\"\r\n                              ? { value: \"\", label: \"\" }\r\n                              : {\r\n                                  value: \"\" + input.periodId.value,\r\n                                  label: periods.data.periods.find(\r\n                                    (s) => s.id === \"\" + input.periodId.value\r\n                                  ).name,\r\n                                }\r\n                          }\r\n                          getOptionLabel={(option) => option.label}\r\n                          getOptionSelected={(option, value) =>\r\n                            option.id === value.id\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label={input.periodId.label}\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              error={!!errors.periodId}\r\n                              helperText={\r\n                                !!errors.periodId\r\n                                  ? errors.periodId\r\n                                  : \"Informe um período letivo\"\r\n                              }\r\n                            />\r\n                          )}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardContent>\r\n                <Divider />\r\n                <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n                  <Link to=\"/app/loans\">\r\n                    <Button\r\n                      style={{\r\n                        marginRight: 10,\r\n                        backgroundColor: \"#8B0000\",\r\n                        color: \"#fff\",\r\n                      }}\r\n                      variant=\"contained\"\r\n                    >\r\n                      Cancelar\r\n                    </Button>\r\n                  </Link>\r\n                  <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                    Editar\r\n                  </Button>\r\n                </Box>\r\n              </Card>\r\n            </Box>\r\n          </Container>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoanDetails;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CoursesList\\ListView\\CreateCourseDetails\\index.js",["596","597","598","599","600","601","602"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { CourseCreate } from \"../../../../graphql/mutations/course\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { CoursesQuery } from \"src/graphql/queries/course\";\r\nimport useMyForm from \"../../../../hooks/MyForm\";\r\nimport fields from \"./fields\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n}));\r\n\r\nconst CourseDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  var history = useHistory();\r\n  const {\r\n    fields: input,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    setTouched,\r\n    reset,\r\n    setValues,\r\n  } = useMyForm(fields);\r\n\r\n  const [mutationCreate] = useMutation(CourseCreate, {\r\n    refetchQueries: [\r\n      {\r\n        query: CoursesQuery,\r\n        variables: { input: { page: 1, paginate: 10, search: \"\" } },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const createCourse = async (data) => {\r\n    await mutationCreate({ variables: { input: data } });\r\n    history.push(\"/app/course\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(createCourse)}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Box mt={3}>\r\n          <Card>\r\n            <CardHeader\r\n              subheader=\"Você pode cadastrar as informações de curso.\"\r\n              title=\"Curso\"\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.name}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.name ? errors.name : \"Informe o nome do curso\"\r\n                    }\r\n                    label={input.name.label}\r\n                    name=\"name\"\r\n                    type={input.name.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.name.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n              <Link to=\"/app/course\">\r\n                <Button\r\n                  style={{\r\n                    marginRight: 10,\r\n                    backgroundColor: \"#8B0000\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n              </Link>\r\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                Cadastrar\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CourseDetails;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CoursesList\\ListView\\EditCourseDetails\\index.js",["603","604","605","606","607","608","609"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { CourseEdit } from \"../../../../graphql/mutations/course\";\r\nimport useMyForm from \"../../../../hooks/MyForm\";\r\nimport fields from \"./fields\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { CourseQuery, CoursesQuery } from \"src/graphql/queries/course\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n}));\r\n\r\nconst CourseDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  var history = useHistory();\r\n  const {\r\n    fields: input,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    setTouched,\r\n    reset,\r\n    setValues,\r\n  } = useMyForm(fields);\r\n  var { id } = useParams();\r\n  const { loading, error, data } = useQuery(CourseQuery, {\r\n    variables: { id: id },\r\n  });\r\n  var values = {\r\n    name: \"\",\r\n  };\r\n  if (!loading) {\r\n    values = data.course;\r\n  }\r\n  const onCompleted = useCallback(\r\n    (response) => {\r\n      setValues(values);\r\n    },\r\n    [setValues]\r\n  );\r\n  useEffect(() => {\r\n    onCompleted();\r\n  }, [values]);\r\n\r\n  const [mutationEdit] = useMutation(CourseEdit, {\r\n    refetchQueries: [\r\n      {\r\n        query: CoursesQuery,\r\n        variables: { input: { page: 1, paginate: 10, search: \"\" } },\r\n      },\r\n    ],\r\n  });\r\n  const editCourse = async (data) => {\r\n    const { id, ...rest } = data;\r\n    await mutationEdit({ variables: { id: data.id, input: { ...rest } } });\r\n    history.push(\"/app/course\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(editCourse)}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Box mt={3}>\r\n          <Card>\r\n            <CardHeader\r\n              subheader=\"Você pode editar as informações de curso.\"\r\n              title=\"Curso\"\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  <input type=\"hidden\" name=\"id\" value={id} />\r\n                  <TextField\r\n                    error={!!errors.name}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.name ? errors.name : \"Informe o nome do curso\"\r\n                    }\r\n                    label={input.name.label}\r\n                    name=\"name\"\r\n                    type={input.name.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.name.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n              <Link to=\"/app/course\">\r\n                <Button\r\n                  style={{\r\n                    marginRight: 10,\r\n                    backgroundColor: \"#8B0000\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n              </Link>\r\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                Editar\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CourseDetails;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CoursesList\\ListView\\index.js",["610","611","612","613","614"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport Page from \"src/components/Page\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport { CoursesQuery } from \"../../../graphql/queries/course\";\r\nimport {\r\n  CourseCreate,\r\n  CourseDelete,\r\n  CourseEdit,\r\n} from \"../../../graphql/mutations/course\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Modal from \"../../../components/ModalIcon\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Container,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  CardHeader,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Trash2 as TrashIcon, Edit as EditIcon } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n    whiteSpace: \"nowrap\",\r\n    overflowX: \"auto\",\r\n  },\r\n  icon: {\r\n    margin: \"0 10px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  endCell: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst CourseList = (props) => {\r\n  const classes = useStyles();\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { loading, error, data } = useQuery(CoursesQuery, {\r\n    variables: { input: { page: page, paginate: limit, search } },\r\n  });\r\n  const [mutationDelete] = useMutation(CourseDelete, {\r\n    refetchQueries: [\r\n      {\r\n        query: CoursesQuery,\r\n        variables: { input: { page: page, paginate: limit, search } },\r\n      },\r\n    ],\r\n  });\r\n\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage + 1);\r\n  };\r\n  const deleteCourse = (id) => {\r\n    mutationDelete({ variables: { id } });\r\n  };\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Curso\">\r\n      <Container maxWidth={false}>\r\n        <Toolbar search={setSearch} />\r\n        <Box mt={3}>\r\n          {loading ? (\r\n            \"\"\r\n          ) : (\r\n            <Card>\r\n              <PerfectScrollbar>\r\n                <Box minWidth={300}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Curso</TableCell>\r\n\r\n                        <TableCell></TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {data.paginateCourses.docs\r\n                        .slice(0, limit)\r\n                        .map((course) => (\r\n                          <TableRow hover key={course.id}>\r\n                            <TableCell>\r\n                              <Box alignItems=\"center\" display=\"flex\">\r\n                                <Typography color=\"textPrimary\" variant=\"body1\">\r\n                                  {course.name}\r\n                                </Typography>\r\n                              </Box>\r\n                            </TableCell>\r\n                            <TableCell className={classes.endCell}>\r\n                              <Modal className={classes.icon} icon={TrashIcon}>\r\n                                <CardHeader\r\n                                  subheader={\r\n                                    'Tem certeza que deseja deletar o curso \"' +\r\n                                    course.name +\r\n                                    '\"'\r\n                                  }\r\n                                  title=\"Deletar categoria\"\r\n                                />\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  style={{\r\n                                    margin: 10,\r\n                                    backgroundColor: \"#8B0000\",\r\n                                    color: \"#fff\",\r\n                                  }}\r\n                                  onClick={() => deleteCourse(course.id)}\r\n                                >\r\n                                  Deletar\r\n                                </Button>\r\n                              </Modal>\r\n\r\n                              <Link\r\n                                style={{ color: \"#263238\" }}\r\n                                to={\"/app/course/edit/\" + course.id}\r\n                              >\r\n                                <EditIcon className={classes.icon} />\r\n                              </Link>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Box>\r\n              </PerfectScrollbar>\r\n              <TablePagination\r\n                component=\"div\"\r\n                count={data.paginateCourses.total}\r\n                onChangePage={handlePageChange}\r\n                onChangeRowsPerPage={handleLimitChange}\r\n                page={page - 1}\r\n                rowsPerPage={limit}\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                labelRowsPerPage={\"Itens por página:\"}\r\n              />\r\n            </Card>\r\n          )}\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CourseList;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\LoansList\\ListView\\CreateLoansDetails\\index.js",["615","616","617","618","619","620","621"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { LoanCreate } from \"../../../../graphql/mutations/loan\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { LoansQuery } from \"src/graphql/queries/loan\";\r\nimport { AllStudentsQuery } from \"src/graphql/queries/student\";\r\nimport { AvailableCopiesQuery } from \"src/graphql/queries/copy\";\r\nimport { AllPeriodsQuery } from \"src/graphql/queries/period\";\r\nimport useMyForm from \"../../../../hooks/MyForm\";\r\nimport { useAuth } from \"../../../../providers/Auth\";\r\nimport fields from \"./fields\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n}));\r\n\r\nconst LoanDetails = ({ className, ...rest }) => {\r\n  var history = useHistory();\r\n  const classes = useStyles();\r\n  const {\r\n    fields: input,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    setTouched,\r\n    reset,\r\n    setValues,\r\n  } = useMyForm(fields);\r\n\r\n  const [mutationCreate] = useMutation(LoanCreate, {\r\n    refetchQueries: [\r\n      {\r\n        query: LoansQuery,\r\n        variables: {\r\n          input: { page: 1, paginate: 10, search: \"\" },\r\n          late: false,\r\n        },\r\n      },\r\n      {\r\n        query: LoansQuery,\r\n        variables: { input: { page: 1, paginate: 10, search: \"\" }, late: true },\r\n      },\r\n      {\r\n        query: AvailableCopiesQuery,\r\n      },\r\n    ],\r\n  });\r\n  const students = useQuery(AllStudentsQuery);\r\n  const copies = useQuery(AvailableCopiesQuery);\r\n  const periods = useQuery(AllPeriodsQuery);\r\n  const createLoan = async (data) => {\r\n    await mutationCreate({ variables: { input: data } });\r\n    history.push(\"/app/loans\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(createLoan)}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Box mt={3}>\r\n          <Card>\r\n            <CardHeader\r\n              subheader=\"Você pode cadastrar as informações de um empréstimo.\"\r\n              title=\"Empréstimos\"\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  {copies.loading ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <Autocomplete\r\n                      name=\"copyId\"\r\n                      options={copies.data.availableCopies.map(\r\n                        ({ id, code }) => ({ value: id, label: code })\r\n                      )}\r\n                      onChange={(event, value) => {\r\n                        if (!value) {\r\n                          handleChange({ name: \"copyId\", value: \"\" });\r\n                        } else {\r\n                          handleChange({\r\n                            name: \"copyId\",\r\n                            value: parseInt(value.value),\r\n                          });\r\n                        }\r\n                      }}\r\n                      getOptionLabel={(option) => option.label}\r\n                      getOptionSelected={(option, value) =>\r\n                        option.id === value.id\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label={input.copyId.label}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          error={!!errors.copyId}\r\n                          helperText={\r\n                            !!errors.copyId\r\n                              ? errors.copyId\r\n                              : \"Informe o exemplar\"\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  {students.loading ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <Autocomplete\r\n                      name=\"studentId\"\r\n                      options={students.data.students.map(({ id, name }) => ({\r\n                        value: id,\r\n                        label: name,\r\n                      }))}\r\n                      onChange={(event, value) => {\r\n                        if (!value) {\r\n                          handleChange({ name: \"studentId\", value: \"\" });\r\n                        } else {\r\n                          handleChange({\r\n                            name: \"studentId\",\r\n                            value: parseInt(value.value),\r\n                          });\r\n                        }\r\n                      }}\r\n                      getOptionLabel={(option) => option.label}\r\n                      getOptionSelected={(option, value) =>\r\n                        option.id === value.id\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label={input.studentId.label}\r\n                          variant=\"outlined\"\r\n                          error={!!errors.studentId}\r\n                          helperText={\r\n                            !!errors.studentId\r\n                              ? errors.studentId\r\n                              : \"Informe o estudante\"\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  {periods.loading ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <Autocomplete\r\n                      name=\"periodId\"\r\n                      options={periods.data.periods.map(({ id, name }) => ({\r\n                        value: id,\r\n                        label: name,\r\n                      }))}\r\n                      onChange={(event, value) => {\r\n                        if (!value) {\r\n                          handleChange({ name: \"periodId\", value: \"\" });\r\n                        } else {\r\n                          handleChange({\r\n                            name: \"periodId\",\r\n                            value: parseInt(value.value),\r\n                          });\r\n                        }\r\n                      }}\r\n                      getOptionLabel={(option) => option.label}\r\n                      getOptionSelected={(option, value) =>\r\n                        option.id === value.id\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label={input.periodId.label}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          error={!!errors.periodId}\r\n                          helperText={\r\n                            !!errors.periodId\r\n                              ? errors.periodId\r\n                              : \"Informe o período letivo\"\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n              <Link to=\"/app/loans\">\r\n                <Button\r\n                  style={{\r\n                    marginRight: 10,\r\n                    backgroundColor: \"#8B0000\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n              </Link>\r\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                Cadastrar\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoanDetails;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\LoansList\\ListView\\index.js",["622","623","624","625","626","627","628","629"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport Page from \"src/components/Page\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport { LoansQuery } from \"../../../graphql/queries/loan\";\r\nimport { AvailableCopiesQuery } from \"src/graphql/queries/copy\";\r\nimport {\r\n  LoanCreate,\r\n  LoanEdit,\r\n  LoanDelete,\r\n  TerminateLoan,\r\n  CancelTerminateLoan,\r\n} from \"../../../graphql/mutations/loan\";\r\nimport { WarnMail } from \"../../../graphql/mutations/mail\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport ModalIcon from \"../../../components/ModalIcon\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Container,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  CardHeader,\r\n  TextField,\r\n  Button,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Trash2 as TrashIcon,\r\n  Edit as EditIcon,\r\n  Check as CheckIcon,\r\n  X as XIcon,\r\n} from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n    whiteSpace: \"nowrap\",\r\n    overflowX: \"auto\",\r\n  },\r\n  icon: {\r\n    margin: \"0 10px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  endCell: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst LoanList = (props) => {\r\n  const classes = useStyles();\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selectedLoanIds, setSelectedLoanIds] = useState([]);\r\n  const end = new Date();\r\n\r\n  const { loading, error, data } = useQuery(LoansQuery, {\r\n    variables: { input: { page: page, paginate: limit, search }, late: false },\r\n  });\r\n  const [mutationDelete] = useMutation(LoanDelete, {\r\n    refetchQueries: [\r\n      {\r\n        query: LoansQuery,\r\n        variables: {\r\n          input: { page: page, paginate: limit, search },\r\n          late: false,\r\n        },\r\n      },\r\n      {\r\n        query: LoansQuery,\r\n        variables: {\r\n          input: { page: page, paginate: limit, search },\r\n          late: true,\r\n        },\r\n      },\r\n      {\r\n        query: AvailableCopiesQuery,\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [mutationTerminate] = useMutation(TerminateLoan, {\r\n    refetchQueries: [\r\n      {\r\n        query: LoansQuery,\r\n        variables: { input: { page: page, paginate: limit }, late: false },\r\n      },\r\n      {\r\n        query: LoansQuery,\r\n        variables: { input: { page: page, paginate: limit }, late: true },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [mutationCancelTerminate] = useMutation(CancelTerminateLoan, {\r\n    refetchQueries: [\r\n      {\r\n        query: LoansQuery,\r\n        variables: { input: { page: page, paginate: limit }, late: false },\r\n      },\r\n      {\r\n        query: LoansQuery,\r\n        variables: { input: { page: page, paginate: limit }, late: true },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [mutationWarnMail] = useMutation(WarnMail);\r\n\r\n  if (error) return <p>Error :(</p>;\r\n  const handleSelectAll = (event, loans) => {\r\n    let newSelectedLoanIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedLoanIds = loans.map((loan) => loan.id);\r\n    } else {\r\n      newSelectedLoanIds = [];\r\n    }\r\n\r\n    setSelectedLoanIds(newSelectedLoanIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedLoanIds.indexOf(id);\r\n    let newSelectedLoanIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedLoanIds = newSelectedLoanIds.concat(selectedLoanIds, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedLoanIds = newSelectedLoanIds.concat(selectedLoanIds.slice(1));\r\n    } else if (selectedIndex === selectedLoanIds.length - 1) {\r\n      newSelectedLoanIds = newSelectedLoanIds.concat(\r\n        selectedLoanIds.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedLoanIds = newSelectedLoanIds.concat(\r\n        selectedLoanIds.slice(0, selectedIndex),\r\n        selectedLoanIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedLoanIds(newSelectedLoanIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage + 1);\r\n  };\r\n  const deleteLoan = (id) => {\r\n    mutationDelete({ variables: { id } });\r\n  };\r\n\r\n  const sendWarnMail = async () => {\r\n    let loans = [];\r\n    if (selectedLoanIds.length == 0) {\r\n      alert(\"Nenhum usuáro selecionado!\");\r\n    } else {\r\n      selectedLoanIds.map(async function (loanId) {\r\n        loans.push(parseInt(loanId));\r\n      });\r\n      let response = await mutationWarnMail({ variables: { loans } });\r\n      if (response.data.warnMail.response[0] == \"success\") {\r\n        alert(\"Enviado com sucesso!\");\r\n      } else {\r\n        console.log(response.data.warnMail.response);\r\n      }\r\n    }\r\n  };\r\n\r\n  const terminateLoan = (id) => {\r\n    mutationTerminate({ variables: { id: id, input: { end } } });\r\n  };\r\n\r\n  const cancelTerminateLoan = (id) => {\r\n    mutationCancelTerminate({ variables: { id } });\r\n  };\r\n  return (\r\n    <Page className={classes.root} title=\"Empréstimos\">\r\n      <Container maxWidth={false}>\r\n        <>\r\n          <Toolbar search={setSearch} mail={sendWarnMail} />\r\n          <Box mt={3}>\r\n            {loading ? (\r\n              \"\"\r\n            ) : (\r\n              <Card>\r\n                <PerfectScrollbar>\r\n                  <Box minWidth={300}>\r\n                    <Table>\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell padding=\"checkbox\">\r\n                            <Checkbox\r\n                              checked={\r\n                                selectedLoanIds.length ===\r\n                                data.paginateLoans.docs.slice(0, limit).length\r\n                              }\r\n                              color=\"primary\"\r\n                              indeterminate={\r\n                                selectedLoanIds.length > 0 &&\r\n                                selectedLoanIds.length <\r\n                                  data.paginateLoans.docs.slice(0, limit).length\r\n                              }\r\n                              onChange={(e) =>\r\n                                handleSelectAll(\r\n                                  e,\r\n                                  data.paginateLoans.docs.slice(0, limit)\r\n                                )\r\n                              }\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>Estudante</TableCell>\r\n                          <TableCell>Exemplar</TableCell>\r\n                          <TableCell>Período</TableCell>\r\n                          <TableCell>Entrege?</TableCell>\r\n\r\n                          <TableCell></TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {data.paginateLoans.docs.slice(0, limit).map((loan) => (\r\n                          <TableRow hover key={loan.id}>\r\n                            <TableCell padding=\"checkbox\">\r\n                              <Checkbox\r\n                                color=\"primary\"\r\n                                checked={\r\n                                  selectedLoanIds.indexOf(loan.id) !== -1\r\n                                }\r\n                                onChange={(event) =>\r\n                                  handleSelectOne(event, loan.id)\r\n                                }\r\n                                value=\"true\"\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell>{loan.student.name}</TableCell>\r\n                            <TableCell>{loan.copy.code}</TableCell>\r\n\r\n                            <TableCell>{loan.period.name}</TableCell>\r\n                            <TableCell>\r\n                              <ModalIcon\r\n                                className={classes.icon}\r\n                                icon={loan.delivered ? CheckIcon : XIcon}\r\n                              >\r\n                                <CardHeader title=\"Mudar status empréstimo\" />\r\n                                {loan.delivered ? (\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    style={{\r\n                                      margin: 10,\r\n                                      backgroundColor: \"#8B0000\",\r\n                                      color: \"#fff\",\r\n                                    }}\r\n                                    onClick={() => cancelTerminateLoan(loan.id)}\r\n                                  >\r\n                                    Marcar como não entregue\r\n                                  </Button>\r\n                                ) : (\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    style={{\r\n                                      margin: 10,\r\n                                      backgroundColor: \"#17882c\",\r\n                                      color: \"#fff\",\r\n                                    }}\r\n                                    onClick={() => terminateLoan(loan.id)}\r\n                                  >\r\n                                    Marcar como entregue\r\n                                  </Button>\r\n                                )}\r\n                              </ModalIcon>\r\n                            </TableCell>\r\n                            <TableCell className={classes.endCell}>\r\n                              <ModalIcon\r\n                                className={classes.icon}\r\n                                icon={TrashIcon}\r\n                              >\r\n                                <CardHeader\r\n                                  subheader={\r\n                                    \"Tem certeza que deseja deletar o empréstimo?\"\r\n                                  }\r\n                                  title=\"Deletar empréstimo\"\r\n                                />\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  style={{\r\n                                    margin: 10,\r\n                                    backgroundColor: \"#8B0000\",\r\n                                    color: \"#fff\",\r\n                                  }}\r\n                                  onClick={() => deleteLoan(loan.id)}\r\n                                >\r\n                                  Deletar\r\n                                </Button>\r\n                              </ModalIcon>\r\n\r\n                              <Link\r\n                                to={\"/app/loans/edit/\" + loan.id}\r\n                                style={{ color: \"#263238\" }}\r\n                              >\r\n                                <EditIcon className={classes.icon} />\r\n                              </Link>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Box>\r\n                </PerfectScrollbar>\r\n                <TablePagination\r\n                  component=\"div\"\r\n                  count={data.paginateLoans.total}\r\n                  onChangePage={handlePageChange}\r\n                  onChangeRowsPerPage={handleLimitChange}\r\n                  page={page - 1}\r\n                  rowsPerPage={limit}\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  labelRowsPerPage={\"Itens por página:\"}\r\n                />\r\n              </Card>\r\n            )}\r\n          </Box>\r\n        </>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default LoanList;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\PeriodsList\\ListView\\index.js",["630","631","632","633","634","635","636"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport Page from \"src/components/Page\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport { PeriodsQuery } from \"../../../graphql/queries/period\";\r\nimport {\r\n  PeriodCreate,\r\n  PeriodEdit,\r\n  PeriodDelete,\r\n} from \"../../../graphql/mutations/period\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Modal from \"../../../components/ModalIcon\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Container,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  CardHeader,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Trash2 as TrashIcon, Edit as EditIcon } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n    whiteSpace: \"nowrap\",\r\n    overflowX: \"auto\",\r\n  },\r\n  icon: {\r\n    margin: \"0 10px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  endCell: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst PeriodsList = (props) => {\r\n  const classes = useStyles();\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { loading, error, data } = useQuery(PeriodsQuery, {\r\n    variables: { input: { page: page, paginate: limit, search } },\r\n  });\r\n  const [mutationDelete] = useMutation(PeriodDelete, {\r\n    refetchQueries: [\r\n      {\r\n        query: PeriodsQuery,\r\n        variables: { input: { page: page, paginate: limit, search } },\r\n      },\r\n    ],\r\n  });\r\n\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage + 1);\r\n  };\r\n\r\n  const deletePeriod = (id) => {\r\n    mutationDelete({ variables: { id } });\r\n  };\r\n  const formatDate = (d) => {\r\n    let date = d.substr(8, 2) + \"/\" + d.substr(5, 2) + \"/\" + d.substr(0, 4);\r\n    return date;\r\n  };\r\n  return (\r\n    <Page className={classes.root} title=\"Períodos\">\r\n      <Container maxWidth={false}>\r\n        <>\r\n          <Toolbar search={setSearch} />\r\n          <Box mt={3}>\r\n            {loading ? (\r\n              \"\"\r\n            ) : (\r\n              <Card>\r\n                <PerfectScrollbar>\r\n                  <Box minWidth={300}>\r\n                    <Table>\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Período</TableCell>\r\n                          <TableCell>Data Inicial</TableCell>\r\n                          <TableCell>Data Final</TableCell>\r\n                          <TableCell></TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {data.paginatePeriods.docs\r\n                          .slice(0, limit)\r\n                          .map((period) => (\r\n                            <TableRow hover key={period.id}>\r\n                              <TableCell>{period.name}</TableCell>\r\n                              <TableCell>{formatDate(period.start)}</TableCell>\r\n                              <TableCell>{formatDate(period.end)}</TableCell>\r\n                              <TableCell className={classes.endCell}>\r\n                                <Modal\r\n                                  className={classes.icon}\r\n                                  icon={TrashIcon}\r\n                                >\r\n                                  <CardHeader\r\n                                    subheader={\r\n                                      \"Tem certeza que deseja deletar o período?\"\r\n                                    }\r\n                                    title=\"Deletar período\"\r\n                                  />\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    style={{\r\n                                      margin: 10,\r\n                                      backgroundColor: \"#8B0000\",\r\n                                      color: \"#fff\",\r\n                                    }}\r\n                                    onClick={() => deletePeriod(period.id)}\r\n                                  >\r\n                                    Deletar\r\n                                  </Button>\r\n                                </Modal>\r\n\r\n                                <Link\r\n                                  to={\"/app/periods/edit/\" + period.id}\r\n                                  style={{ color: \"#263238\" }}\r\n                                >\r\n                                  <EditIcon className={classes.icon} />\r\n                                </Link>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Box>\r\n                </PerfectScrollbar>\r\n                <TablePagination\r\n                  component=\"div\"\r\n                  count={data.paginatePeriods.total}\r\n                  onChangePage={handlePageChange}\r\n                  onChangeRowsPerPage={handleLimitChange}\r\n                  page={page - 1}\r\n                  rowsPerPage={limit}\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  labelRowsPerPage={\"Itens por página:\"}\r\n                />\r\n              </Card>\r\n            )}\r\n          </Box>\r\n        </>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default PeriodsList;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CopiesList\\ListView\\EditCopiesDetails\\index.js",["637","638","639","640","641","642","643","644","645","646","647"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { CopyEdit } from \"../../../../graphql/mutations/copy\";\r\nimport useMyForm from \"../../../../hooks/MyForm\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport fields from \"./fields\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { CopyQuery, CopiesByBookQuery } from \"src/graphql/queries/copy\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n}));\r\n\r\nconst CopyDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  var history = useHistory();\r\n  const {\r\n    fields: input,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    setTouched,\r\n    reset,\r\n    setValues,\r\n  } = useMyForm(fields);\r\n  var { id } = useParams();\r\n  const { loading, error, data } = useQuery(CopyQuery, {\r\n    variables: { id: id, search: \"\" },\r\n  });\r\n  var values = {\r\n    status: { label: \"\", value: \"\" },\r\n  };\r\n  var bookId = \"\";\r\n  const translate = (word) => {\r\n    if (word == \"MISPLACED\") {\r\n      return \"EXTRAVIADO\";\r\n    }\r\n    if (word == \"LOANED\") {\r\n      return \"EMPRESTADO\";\r\n    }\r\n    if (word == \"AVAILABLE\") {\r\n      return \"DISPONIVEL\";\r\n    }\r\n  };\r\n  if (!loading) {\r\n    values = {\r\n      id: data.copy.id,\r\n      status: { value: data.copy.status, label: translate(data.copy.status) },\r\n    };\r\n    bookId = parseInt(data.copy.book.id);\r\n  }\r\n  const onCompleted = useCallback(\r\n    (response) => {\r\n      setValues(values);\r\n    },\r\n    [setValues]\r\n  );\r\n  useEffect(() => {\r\n    onCompleted();\r\n  }, [loading]);\r\n\r\n  const [mutationEdit] = useMutation(CopyEdit, {\r\n    refetchQueries: [\r\n      {\r\n        query: CopiesByBookQuery,\r\n        variables: { bookId: bookId },\r\n      },\r\n    ],\r\n  });\r\n  const editCopy = async (data) => {\r\n    data.status = data.status.value;\r\n    const { id, ...rest } = data;\r\n    await mutationEdit({ variables: { id: data.id, input: { ...rest } } });\r\n    history.push(\"/app/copies/\" + bookId);\r\n  };\r\n\r\n  const options = [\r\n    { value: \"MISPLACED\", label: \"EXTRAVIADO\" },\r\n    { value: \"AVAILABLE\", label: \"DISPONIVEL\" },\r\n    { value: \"LOANED\", label: \"EMPRESTADO\" },\r\n  ];\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(editCopy)}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Box mt={3}>\r\n          <Card>\r\n            <CardHeader\r\n              subheader=\"Você pode editar as informações de curso.\"\r\n              title=\"Curso\"\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  <input type=\"hidden\" name=\"id\" value={id} />\r\n                  {loading ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <Autocomplete\r\n                      name=\"status\"\r\n                      options={options}\r\n                      onChange={(event, value) => {\r\n                        handleChange({ name: \"status\", value: value });\r\n                      }}\r\n                      value={input.status.value}\r\n                      getOptionSelected={(option, value) =>\r\n                        option.id === value.id\r\n                      }\r\n                      getOptionLabel={(option) => option.label}\r\n                      getOptionDisabled={(option) => option === options[2]}\r\n                      disabled={data.copy.status == \"LOANED\" ? true : false}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label={input.status.label}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          error={!!errors.status}\r\n                          helperText={\r\n                            !!errors.status\r\n                              ? errors.copyId\r\n                              : \"Informe o status do exemplar\"\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n              <Link to={\"/app/copies/\" + bookId}>\r\n                <Button\r\n                  style={{\r\n                    marginRight: 10,\r\n                    backgroundColor: \"#8B0000\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n              </Link>\r\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                Editar\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CopyDetails;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\LatesList\\ListView\\index.js",["648","649","650","651","652","653","654","655"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport Page from \"src/components/Page\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport { LoansQuery } from \"../../../graphql/queries/loan\";\r\nimport {\r\n  LoanCreate,\r\n  LoanEdit,\r\n  LoanDelete,\r\n  TerminateLoan,\r\n  CancelTerminateLoan,\r\n} from \"../../../graphql/mutations/loan\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport ModalIcon from \"../../../components/ModalIcon\";\r\nimport { LateMail } from \"../../../graphql/mutations/mail\";\r\nimport { AvailableCopiesQuery } from \"src/graphql/queries/copy\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Container,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  CardHeader,\r\n  TextField,\r\n  Button,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Trash2 as TrashIcon,\r\n  Edit as EditIcon,\r\n  Check as CheckIcon,\r\n  X as XIcon,\r\n} from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n    whiteSpace: \"nowrap\",\r\n    overflowX: \"auto\",\r\n  },\r\n  icon: {\r\n    margin: \"0 10px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  endCell: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst LoanList = (props) => {\r\n  const classes = useStyles();\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selectedLoanIds, setSelectedLoanIds] = useState([]);\r\n  const end = new Date();\r\n\r\n  const { loading, error, data } = useQuery(LoansQuery, {\r\n    variables: { input: { page: page, paginate: limit, search }, late: true },\r\n  });\r\n  const [mutationDelete] = useMutation(LoanDelete, {\r\n    refetchQueries: [\r\n      {\r\n        query: LoansQuery,\r\n        variables: {\r\n          input: { page: page, paginate: limit, search: \"\" },\r\n          late: true,\r\n        },\r\n      },\r\n      {\r\n        query: LoansQuery,\r\n        variables: {\r\n          input: { page: page, paginate: limit, search: \"\" },\r\n          late: false,\r\n        },\r\n      },\r\n      {\r\n        query: AvailableCopiesQuery,\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [mutationTerminate] = useMutation(TerminateLoan, {\r\n    refetchQueries: [\r\n      {\r\n        query: LoansQuery,\r\n        variables: {\r\n          input: { page: page, paginate: limit, search: \"\" },\r\n          late: true,\r\n        },\r\n      },\r\n      {\r\n        query: LoansQuery,\r\n        variables: {\r\n          input: { page: page, paginate: limit, search: \"\" },\r\n          late: false,\r\n        },\r\n      },\r\n      {\r\n        query: AvailableCopiesQuery,\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [mutationCancelTerminate] = useMutation(CancelTerminateLoan, {\r\n    refetchQueries: [\r\n      {\r\n        query: LoansQuery,\r\n        variables: {\r\n          input: { page: page, paginate: limit, search: \"\" },\r\n          late: true,\r\n        },\r\n      },\r\n      {\r\n        query: LoansQuery,\r\n        variables: {\r\n          input: { page: page, paginate: limit, search: \"\" },\r\n          late: false,\r\n        },\r\n      },\r\n    ],\r\n  });\r\n  const [mutationLateMail] = useMutation(LateMail);\r\n\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  const handleSelectAll = (event, loans) => {\r\n    let newSelectedLoanIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedLoanIds = loans.map((loan) => loan.id);\r\n    } else {\r\n      newSelectedLoanIds = [];\r\n    }\r\n\r\n    setSelectedLoanIds(newSelectedLoanIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedLoanIds.indexOf(id);\r\n    let newSelectedLoanIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedLoanIds = newSelectedLoanIds.concat(selectedLoanIds, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedLoanIds = newSelectedLoanIds.concat(selectedLoanIds.slice(1));\r\n    } else if (selectedIndex === selectedLoanIds.length - 1) {\r\n      newSelectedLoanIds = newSelectedLoanIds.concat(\r\n        selectedLoanIds.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedLoanIds = newSelectedLoanIds.concat(\r\n        selectedLoanIds.slice(0, selectedIndex),\r\n        selectedLoanIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedLoanIds(newSelectedLoanIds);\r\n  };\r\n\r\n  const sendLateMail = async () => {\r\n    let loans = [];\r\n    if (selectedLoanIds.length == 0) {\r\n      alert(\"Nenhum usuáro selecionado!\");\r\n    } else {\r\n      selectedLoanIds.map(async function (loanId) {\r\n        loans.push(parseInt(loanId));\r\n      });\r\n      let response = await mutationLateMail({ variables: { loans } });\r\n      if (response.data.lateMail.response[0] == \"success\") {\r\n        alert(\"Enviado com sucesso!\");\r\n      } else {\r\n        console.log(response.data.lateMail.response);\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteLoan = (id) => {\r\n    mutationDelete({ variables: { id } });\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage + 1);\r\n  };\r\n\r\n  const terminateLoan = (id) => {\r\n    mutationTerminate({ variables: { id: id, input: { end } } });\r\n  };\r\n\r\n  const cancelTerminateLoan = (id) => {\r\n    mutationCancelTerminate({ variables: { id } });\r\n  };\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Empréstimos\">\r\n      <Container maxWidth={false}>\r\n        <>\r\n          <Toolbar search={setSearch} mail={sendLateMail} />\r\n          <Box mt={3}>\r\n            {loading ? (\r\n              \"\"\r\n            ) : (\r\n              <Card>\r\n                <PerfectScrollbar>\r\n                  <Box minWidth={300}>\r\n                    <Table>\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell padding=\"checkbox\">\r\n                            <Checkbox\r\n                              checked={\r\n                                selectedLoanIds.length ===\r\n                                data.paginateLoans.docs.slice(0, limit).length\r\n                              }\r\n                              color=\"primary\"\r\n                              indeterminate={\r\n                                selectedLoanIds.length > 0 &&\r\n                                selectedLoanIds.length <\r\n                                  data.paginateLoans.docs.slice(0, limit).length\r\n                              }\r\n                              onChange={(e) =>\r\n                                handleSelectAll(\r\n                                  e,\r\n                                  data.paginateLoans.docs.slice(0, limit)\r\n                                )\r\n                              }\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>Estudante</TableCell>\r\n                          <TableCell>Exemplar</TableCell>\r\n                          <TableCell>Período</TableCell>\r\n                          <TableCell>Entrege?</TableCell>\r\n                          <TableCell></TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {data.paginateLoans.docs.slice(0, limit).map((loan) => (\r\n                          <TableRow hover key={loan.id}>\r\n                            <TableCell padding=\"checkbox\">\r\n                              <Checkbox\r\n                                color=\"primary\"\r\n                                checked={\r\n                                  selectedLoanIds.indexOf(loan.id) !== -1\r\n                                }\r\n                                onChange={(event) =>\r\n                                  handleSelectOne(event, loan.id)\r\n                                }\r\n                                value=\"true\"\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell>{loan.student.name}</TableCell>\r\n                            <TableCell>{loan.copy.code}</TableCell>\r\n                            <TableCell>{loan.period.name}</TableCell>\r\n                            <TableCell>\r\n                              <ModalIcon\r\n                                className={classes.icon}\r\n                                icon={loan.delivered ? CheckIcon : XIcon}\r\n                              >\r\n                                <CardHeader title=\"Mudar status empréstimo\" />\r\n                                {loan.delivered ? (\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    style={{\r\n                                      margin: 10,\r\n                                      backgroundColor: \"#8B0000\",\r\n                                      color: \"#fff\",\r\n                                    }}\r\n                                    onClick={() => cancelTerminateLoan(loan.id)}\r\n                                  >\r\n                                    Marcar como não entregue\r\n                                  </Button>\r\n                                ) : (\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    style={{\r\n                                      margin: 10,\r\n                                      backgroundColor: \"#17882c\",\r\n                                      color: \"#fff\",\r\n                                    }}\r\n                                    onClick={() => terminateLoan(loan.id)}\r\n                                  >\r\n                                    Marcar como entregue\r\n                                  </Button>\r\n                                )}\r\n                              </ModalIcon>\r\n                            </TableCell>\r\n                            <TableCell className={classes.endCell}>\r\n                              <ModalIcon\r\n                                className={classes.icon}\r\n                                icon={TrashIcon}\r\n                              >\r\n                                <CardHeader\r\n                                  subheader={\r\n                                    \"Tem certeza que deseja deletar o empréstimo?\"\r\n                                  }\r\n                                  title=\"Deletar empréstimo\"\r\n                                />\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  style={{\r\n                                    margin: 10,\r\n                                    backgroundColor: \"#8B0000\",\r\n                                    color: \"#fff\",\r\n                                  }}\r\n                                  onClick={() => deleteLoan(loan.id)}\r\n                                >\r\n                                  Deletar\r\n                                </Button>\r\n                              </ModalIcon>\r\n\r\n                              <Link\r\n                                to={\"/app/loans/edit/\" + loan.id}\r\n                                style={{ color: \"#263238\" }}\r\n                              >\r\n                                <EditIcon className={classes.icon} />\r\n                              </Link>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Box>\r\n                </PerfectScrollbar>\r\n                <TablePagination\r\n                  component=\"div\"\r\n                  count={data.paginateLoans.total}\r\n                  onChangePage={handlePageChange}\r\n                  onChangeRowsPerPage={handleLimitChange}\r\n                  page={page - 1}\r\n                  rowsPerPage={limit}\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  labelRowsPerPage={\"Itens por página:\"}\r\n                />\r\n              </Card>\r\n            )}\r\n          </Box>\r\n        </>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default LoanList;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CopiesList\\ListView\\index.js",["656","657","658","659","660","661","662","663"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState, useRef } from \"react\";\r\nimport Page from \"src/components/Page\";\r\nimport { CopiesByBookQuery } from \"../../../graphql/queries/copy\";\r\nimport { CopyDelete } from \"../../../graphql/mutations/copy\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Modal from \"../../../components/ModalIcon\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Barcode from \"react-barcode\";\r\nimport PrintConfig from \"src/utils/printConfig\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Container,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  CardHeader,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Trash2 as TrashIcon, Edit as EditIcon } from \"react-feather\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n    whiteSpace: \"nowrap\",\r\n    overflowX: \"auto\",\r\n  },\r\n  icon: {\r\n    margin: \"0 10px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  endCell: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  bars: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    boxSizing: \"border-box\",\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  bar: {\r\n    width: PrintConfig.ticketWidth,\r\n    height: PrintConfig.ticketHeight,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst CopyList = (props) => {\r\n  const classes = useStyles();\r\n  var { id } = useParams();\r\n  const componentRef = useRef();\r\n  id = parseInt(id);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const { loading, error, data } = useQuery(CopiesByBookQuery, {\r\n    variables: { bookId: id, search },\r\n  });\r\n  const [mutationDelete] = useMutation(CopyDelete, {\r\n    refetchQueries: [\r\n      {\r\n        query: CopiesByBookQuery,\r\n        variables: { bookId: id, search },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const translate = (word) => {\r\n    if (word == \"MISPLACED\") {\r\n      return \"EXTRAVIADO\";\r\n    }\r\n    if (word == \"LOANED\") {\r\n      return \"EMPRESTADO\";\r\n    }\r\n    if (word == \"AVAILABLE\") {\r\n      return \"DISPONIVEL\";\r\n    }\r\n  };\r\n\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  const deleteCourse = (id) => {\r\n    mutationDelete({ variables: { id } });\r\n  };\r\n  return (\r\n    <Page className={classes.root} title=\"Exemplares\">\r\n      <Container maxWidth={false}>\r\n        <Toolbar componentRef={componentRef} search={setSearch} id={id} />\r\n        <Box mt={3}>\r\n          {loading ? (\r\n            \"\"\r\n          ) : (\r\n            <Card>\r\n              <div style={{ display: \"none\" }}>\r\n                <div ref={componentRef} className={classes.bars}>\r\n                  {data.copiesByBookId.map((copy) => (\r\n                    <div key={copy.id} className={classes.bar}>\r\n                      <Barcode\r\n                        width={PrintConfig.barWidth}\r\n                        height={PrintConfig.barHeight}\r\n                        fontSize={PrintConfig.barFontSize}\r\n                        value={copy.code}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <PerfectScrollbar>\r\n                <Box minWidth={300}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Código</TableCell>\r\n                        <TableCell>Status</TableCell>\r\n                        <TableCell>Livro</TableCell>\r\n                        <TableCell></TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {data.copiesByBookId.map((copy) => (\r\n                        <TableRow hover key={copy.id}>\r\n                          <TableCell>\r\n                            <Box alignItems=\"center\" display=\"flex\">\r\n                              <Typography color=\"textPrimary\" variant=\"body1\">\r\n                                {copy.code}\r\n                              </Typography>\r\n                            </Box>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Box alignItems=\"center\" display=\"flex\">\r\n                              <Typography color=\"textPrimary\" variant=\"body1\">\r\n                                {translate(copy.status)}\r\n                              </Typography>\r\n                            </Box>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Box alignItems=\"center\" display=\"flex\">\r\n                              <Typography color=\"textPrimary\" variant=\"body1\">\r\n                                {copy.book.name}\r\n                              </Typography>\r\n                            </Box>\r\n                          </TableCell>\r\n                          <TableCell className={classes.endCell}>\r\n                            <Modal className={classes.icon} icon={TrashIcon}>\r\n                              <CardHeader\r\n                                subheader={\r\n                                  \"Tem certeza que deseja deletar o exemplar de código \" +\r\n                                  copy.code +\r\n                                  \"?\"\r\n                                }\r\n                                title=\"Deletar exemplar\"\r\n                              />\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                style={{\r\n                                  margin: 10,\r\n                                  backgroundColor: \"#8B0000\",\r\n                                  color: \"#fff\",\r\n                                }}\r\n                                onClick={() => deleteCourse(copy.id)}\r\n                              >\r\n                                Deletar\r\n                              </Button>\r\n                            </Modal>\r\n\r\n                            <Link\r\n                              style={{ color: \"#263238\" }}\r\n                              to={\"/app/copies/edit/\" + copy.id}\r\n                            >\r\n                              <EditIcon className={classes.icon} />\r\n                            </Link>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Box>\r\n              </PerfectScrollbar>\r\n            </Card>\r\n          )}\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CopyList;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\PeriodsList\\ListView\\EditPeriodDetails\\index.js",["664","665","666","667","668","669","670","671","672","673","674"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { PeriodQuery, PeriodsQuery } from \"../../../../graphql/queries/period\";\r\nimport {\r\n  PeriodCreate,\r\n  PeriodEdit,\r\n  PeriodDelete,\r\n} from \"../../../../graphql/mutations/period\";\r\nimport fields from \"./fields\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport useMyForm from \"../../../../hooks/MyForm\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Select,\r\n  InputLabel,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n}));\r\n\r\nconst PeriodDetails = ({ className, details, edit, set, ...rest }) => {\r\n  const classes = useStyles();\r\n  var history = useHistory();\r\n\r\n  const {\r\n    fields: input,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    setTouched,\r\n    reset,\r\n    setValues,\r\n  } = useMyForm(fields);\r\n\r\n  var { id } = useParams();\r\n\r\n  const { loading, error, data } = useQuery(PeriodQuery, {\r\n    variables: { id: id },\r\n  });\r\n\r\n  var values = {\r\n    name: \"\",\r\n    start: \"\",\r\n    end: \"\",\r\n  };\r\n\r\n  if (!loading) {\r\n    values = {\r\n      id: data.period.id,\r\n      name: data.period.name,\r\n      start: data.period.start,\r\n      end: data.period.end,\r\n    };\r\n  }\r\n\r\n  const onCompleted = useCallback(\r\n    (response) => {\r\n      setValues(values);\r\n    },\r\n    [setValues]\r\n  );\r\n  useEffect(() => {\r\n    onCompleted();\r\n  }, [loading]);\r\n\r\n  const [mutationEdit] = useMutation(PeriodEdit, {\r\n    refetchQueries: [\r\n      {\r\n        query: PeriodsQuery,\r\n        variables: { input: { page: 1, paginate: 10, search: \"\" } },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const editPeriod = async (data) => {\r\n    const { id, ...rest } = data;\r\n    await mutationEdit({ variables: { id: id, input: { ...rest } } });\r\n    history.push(\"/app/periods\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(editPeriod)}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Box mt={3}>\r\n          <Card>\r\n            <CardHeader\r\n              subheader=\"Você pode cadastrar as informações de um período.\"\r\n              title=\"Períodos\"\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.name}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.name\r\n                        ? errors.name\r\n                        : \"Informe o nome do período letivo\"\r\n                    }\r\n                    label={input.name.label}\r\n                    name=\"name\"\r\n                    type={input.name.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.name.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.start}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.start\r\n                        ? errors.start\r\n                        : \"Informe a data de início do período letivo\"\r\n                    }\r\n                    label={input.start.label}\r\n                    name=\"start\"\r\n                    type={input.start.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.start.value}\r\n                    variant=\"outlined\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.end}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.end\r\n                        ? errors.end\r\n                        : \"Informe a data final do período letivo\"\r\n                    }\r\n                    label={input.end.label}\r\n                    name=\"end\"\r\n                    type={input.end.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.end.value}\r\n                    variant=\"outlined\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n              <Link to=\"/app/periods\">\r\n                <Button\r\n                  style={{\r\n                    marginRight: 10,\r\n                    backgroundColor: \"#8B0000\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n              </Link>\r\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                Cadastrar\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PeriodDetails;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\PeriodsList\\ListView\\CreatePeriodDetails\\index.js",["675","676","677","678","679","680","681","682"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { PeriodCreate } from \"../../../../graphql/mutations/period\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { PeriodsQuery } from \"src/graphql/queries/period\";\r\nimport useMyForm from \"../../../../hooks/MyForm\";\r\nimport { useAuth } from \"../../../../providers/Auth\";\r\nimport fields from \"./fields\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n}));\r\n\r\nconst PeriodDetails = ({ className, ...rest }) => {\r\n  var history = useHistory();\r\n  const classes = useStyles();\r\n  const {\r\n    fields: input,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    setTouched,\r\n    reset,\r\n    setValues,\r\n  } = useMyForm(fields);\r\n\r\n  const [mutationCreate] = useMutation(PeriodCreate, {\r\n    refetchQueries: [\r\n      {\r\n        query: PeriodsQuery,\r\n        variables: { input: { page: 1, paginate: 10, search: \"\" } },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const createPeriod = async (data) => {\r\n    await mutationCreate({ variables: { input: data } });\r\n    history.push(\"/app/periods\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(createPeriod)}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Box mt={3}>\r\n          <Card>\r\n            <CardHeader\r\n              subheader=\"Você pode cadastrar as informações de um período.\"\r\n              title=\"Períodos\"\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.name}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.name\r\n                        ? errors.name\r\n                        : \"Informe o nome do período letivo\"\r\n                    }\r\n                    label={input.name.label}\r\n                    name=\"name\"\r\n                    type={input.name.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.name.value}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.start}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.start\r\n                        ? errors.start\r\n                        : \"Informe a data de início do período letivo\"\r\n                    }\r\n                    label={input.start.label}\r\n                    name=\"start\"\r\n                    type={input.start.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.start.value}\r\n                    variant=\"outlined\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={6} xs={12}>\r\n                  <TextField\r\n                    error={!!errors.end}\r\n                    fullWidth\r\n                    helperText={\r\n                      !!errors.end\r\n                        ? errors.end\r\n                        : \"Informe a data final do período letivo\"\r\n                    }\r\n                    label={input.end.label}\r\n                    name=\"end\"\r\n                    type={input.end.type}\r\n                    onChange={({ target }) => handleChange(target)}\r\n                    value={input.end.value}\r\n                    variant=\"outlined\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n              <Link to=\"/app/periods\">\r\n                <Button\r\n                  style={{\r\n                    marginRight: 10,\r\n                    backgroundColor: \"#8B0000\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n              </Link>\r\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                Cadastrar\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PeriodDetails;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\PeriodsList\\ListView\\CreatePeriodDetails\\fields.js",["683"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  name: {\r\n    label: \"Período\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n  start: {\r\n    label: \"Data Início\",\r\n    type: \"date\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n  end: {\r\n    label: \"Data Fim\",\r\n    type: \"date\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\PeriodsList\\ListView\\EditPeriodDetails\\fields.js",["684"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  id: {\r\n    type: \"hidden\",\r\n    value: \"\",\r\n  },\r\n  name: {\r\n    label: \"Período\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n  start: {\r\n    label: \"Data Início\",\r\n    type: \"date\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n  end: {\r\n    label: \"Data Fim\",\r\n    type: \"date\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\period.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\queries\\period.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\utils\\printConfig.js",["685"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  pageSize: \"21.59cm 27.94cm\",\r\n  pageMargin: \"1.35cm 0cm\",\r\n  ticketWidth: \"10.795cm\",\r\n  ticketHeight: \"2.52cm\",\r\n  barWidth: 1,\r\n  barHeight: 50,\r\n  barFontSize: 10,\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CopiesList\\ListView\\Toolbar.js",["686","687","688","689","690","691"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport clsx from \"clsx\";\r\nimport { CopiesByBookQuery } from \"../../../graphql/queries/copy\";\r\nimport { CopyCreate } from \"../../../graphql/mutations/copy\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport PrintConfig from \"src/utils/printConfig\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles,\r\n  CardHeader,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Search as SearchIcon } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Toolbar = ({ className, id, search, componentRef, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [mutationCreate] = useMutation(CopyCreate, {\r\n    refetchQueries: [\r\n      {\r\n        query: CopiesByBookQuery,\r\n        variables: { bookId: id, search: \"\" },\r\n      },\r\n    ],\r\n  });\r\n  const handlePress = (e) => {\r\n    if (e.which == 13) {\r\n      search(e.target.value);\r\n    }\r\n  };\r\n  const createCopy = async (e) => {\r\n    e.preventDefault();\r\n    for (let i = 0; i < quantity; i++) {\r\n      await mutationCreate({\r\n        variables: { input: { status: \"AVAILABLE\", bookId: id } },\r\n      });\r\n    }\r\n  };\r\n  const handleChange = (e) => {\r\n    setQuantity(e.target.value);\r\n  };\r\n  const pageStyles = `\r\n  @page {\r\n    size: ${PrintConfig.pageSize};\r\n    margin: ${PrintConfig.pageMargin};\r\n  }\r\n`;\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <Link to=\"/app/books\">\r\n          <Button\r\n            style={{ color: \"#fff\", backgroundColor: \"#8B0000\", height: 55 }}\r\n          >\r\n            <ArrowBackIcon fontSize=\"large\" /> Voltar\r\n          </Button>\r\n        </Link>\r\n        <div style={{ display: \"flex\" }}>\r\n          <ReactToPrint\r\n            pageStyle={pageStyles}\r\n            trigger={() => (\r\n              <Button\r\n                style={{\r\n                  color: \"#fff\",\r\n                  backgroundColor: \"#e6ac00\",\r\n                  height: 55,\r\n                  marginRight: 10,\r\n                }}\r\n                variant=\"contained\"\r\n                startIcon={<PrintIcon />}\r\n              >\r\n                Imprimir etiquetas\r\n              </Button>\r\n            )}\r\n            content={() => componentRef.current}\r\n          />\r\n          <form onSubmit={createCopy}>\r\n            <TextField\r\n              helperText={\"Informe a quantidade de exemplares\"}\r\n              label=\"Quantidade\"\r\n              type=\"number\"\r\n              onChange={handleChange}\r\n              variant=\"outlined\"\r\n              inputProps={{ min: 0 }}\r\n            />\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              style={{\r\n                height: 55,\r\n                marginLeft: 10,\r\n              }}\r\n            >\r\n              Gerar Exemplares\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Box>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box maxWidth={500}>\r\n              <TextField\r\n                fullWidth\r\n                onKeyPress={handlePress}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon fontSize=\"small\" color=\"action\">\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                placeholder=\"Buscar exemplares por código\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Toolbar;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\hooks\\MyForm\\index.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\components\\ModalIcon.js",["692"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    minWidth: \"40%\",\r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal(props) {\r\n  const classes = useStyles();\r\n  const Icon = props.icon;\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Icon onClick={handleOpen} className={props.className} />\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div onClick={handleClose} className={classes.paper}>\r\n            {props.children}\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\copy.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\queries\\copy.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\components\\Modal.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\components\\Page.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\queries\\loan.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\loan.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\mail.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\LatesList\\ListView\\Toolbar.js",["693"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles,\r\n  CardHeader,\r\n} from \"@material-ui/core\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { Search as SearchIcon } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  bar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  warnButton: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      paddingTop: \"5%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Toolbar = ({ className, create, mail, search, ...rest }) => {\r\n  const classes = useStyles();\r\n  const handlePress = (e) => {\r\n    if (e.which == 13) {\r\n      search(e.target.value);\r\n    }\r\n  };\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\">\r\n        <Link to=\"/app/loans/create\">\r\n          <Button color=\"primary\" variant=\"contained\">\r\n            Adicionar Empréstimo\r\n          </Button>\r\n        </Link>\r\n      </Box>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box className={classes.bar}>\r\n              <Box width={\"100%\"} maxWidth={500}>\r\n                <TextField\r\n                  fullWidth\r\n                  onKeyPress={handlePress}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <SvgIcon fontSize=\"small\" color=\"action\">\r\n                          <SearchIcon />\r\n                        </SvgIcon>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  placeholder=\"Buscar Empréstimos\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Box>\r\n              <Box className={classes.warnButton} maxWidth={500}>\r\n                <Modal\r\n                  style={{ backgroundColor: \"#8B0000\", color: \"#fff\" }}\r\n                  startIcon={<WarningIcon />}\r\n                  variant=\"contained\"\r\n                  text=\"Enviar alerta\"\r\n                >\r\n                  <CardHeader title=\"Deseja enviar um e-mail de alerta de atraso para os empréstimos selecionados?\" />\r\n                  <Button\r\n                    color=\"primary\"\r\n                    startIcon={<SendIcon />}\r\n                    style={{ margin: 10 }}\r\n                    variant=\"contained\"\r\n                    onClick={mail}\r\n                  >\r\n                    Enviar\r\n                  </Button>\r\n                </Modal>\r\n              </Box>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Toolbar;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CopiesList\\ListView\\EditCopiesDetails\\fields.js",["694"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  id: {\r\n    type: \"hidden\",\r\n    value: \"\",\r\n  },\r\n  status: {\r\n    label: \"Status\",\r\n    type: \"number\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\PeriodsList\\ListView\\Toolbar.js",["695","696","697"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles,\r\n  CardHeader,\r\n} from \"@material-ui/core\";\r\nimport { Search as SearchIcon } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Toolbar = ({ className, search, ...rest }) => {\r\n  const classes = useStyles();\r\n  const handlePress = (e) => {\r\n    if (e.which == 13) {\r\n      search(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\">\r\n        <Link to=\"/app/periods/create\">\r\n          <Button color=\"primary\" variant=\"contained\">\r\n            Adicionar Período\r\n          </Button>\r\n        </Link>\r\n      </Box>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box maxWidth={500}>\r\n              <TextField\r\n                fullWidth\r\n                onKeyPress={handlePress}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon fontSize=\"small\" color=\"action\">\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                placeholder=\"Buscar Períodos\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Toolbar;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\LoansList\\ListView\\Toolbar.js",["698"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles,\r\n  CardHeader,\r\n} from \"@material-ui/core\";\r\nimport BellIcon from \"@material-ui/icons/Notifications\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { Search as SearchIcon } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  bar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  warnButton: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      paddingTop: \"5%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Toolbar = ({ className, create, mail, search, ...rest }) => {\r\n  const classes = useStyles();\r\n  const handlePress = (e) => {\r\n    if (e.which == 13) {\r\n      search(e.target.value);\r\n    }\r\n  };\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\">\r\n        <Link to=\"/app/loans/create\">\r\n          <Button color=\"primary\" variant=\"contained\">\r\n            Adicionar Empréstimo\r\n          </Button>\r\n        </Link>\r\n      </Box>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box className={classes.bar}>\r\n              <Box width={\"100%\"} maxWidth={500}>\r\n                <TextField\r\n                  fullWidth\r\n                  onKeyPress={handlePress}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <SvgIcon fontSize=\"small\" color=\"action\">\r\n                          <SearchIcon />\r\n                        </SvgIcon>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  placeholder=\"Buscar Empréstimos\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Box>\r\n              <Box className={classes.warnButton} maxWidth={500}>\r\n                <Modal\r\n                  style={{ backgroundColor: \"#e6ac00\", color: \"#fff\" }}\r\n                  startIcon={<BellIcon />}\r\n                  variant=\"contained\"\r\n                  text=\"Enviar notificação\"\r\n                >\r\n                  <CardHeader title=\"Deseja enviar um e-mail de lembrete de entrega para os empréstimos selecionados?\" />\r\n                  <Button\r\n                    color=\"primary\"\r\n                    startIcon={<SendIcon />}\r\n                    style={{ margin: 10 }}\r\n                    variant=\"contained\"\r\n                    onClick={mail}\r\n                  >\r\n                    Enviar\r\n                  </Button>\r\n                </Modal>\r\n              </Box>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Toolbar;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\LoansList\\ListView\\CreateLoansDetails\\fields.js",["699"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  studentId: {\r\n    label: \"Estudante\",\r\n    type: \"number\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n  copyId: {\r\n    label: \"Exemplar\",\r\n    type: \"number\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n  periodId: {\r\n    label: \"Período letivo\",\r\n    type: \"number\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\queries\\student.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CoursesList\\ListView\\Toolbar.js",["700"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Search as SearchIcon } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Toolbar = ({ className, create, search, ...rest }) => {\r\n  const classes = useStyles();\r\n  const handlePress = (e) => {\r\n    if (e.which == 13) {\r\n      search(e.target.value);\r\n    }\r\n  };\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\">\r\n        <Link to=\"/app/course/create\">\r\n          <Button color=\"primary\" variant=\"contained\">\r\n            Adicionar Curso\r\n          </Button>\r\n        </Link>\r\n      </Box>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box maxWidth={500}>\r\n              <TextField\r\n                fullWidth\r\n                onKeyPress={handlePress}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon fontSize=\"small\" color=\"action\">\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                placeholder=\"Buscar Curso\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Toolbar;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\queries\\course.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\course.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CoursesList\\ListView\\EditCourseDetails\\fields.js",["701"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  id: {\r\n    type: \"hidden\",\r\n    value: \"\",\r\n  },\r\n  name: {\r\n    label: \"Curso\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\CoursesList\\ListView\\CreateCourseDetails\\fields.js",["702"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  name: {\r\n    label: \"Curso\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\LoansList\\ListView\\EditLoansDetails\\fields.js",["703"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  id: {\r\n    type: \"hidden\",\r\n    value: \"\",\r\n  },\r\n\r\n  studentId: {\r\n    label: \"Estudante\",\r\n    type: \"number\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n  copyId: {\r\n    label: \"Exemplar\",\r\n    type: \"number\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n  periodId: {\r\n    label: \"Período letivo\",\r\n    type: \"number\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\queries\\user.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\UsersList\\ListView\\CreateUsersDetails\\fields.js",["704"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  name: {\r\n    label: \"Nome\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n  login: {\r\n    label: \"Login\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n  password: {\r\n    label: \"Senha\",\r\n    type: \"password\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n  accessLevel: {\r\n    label: \"Nível de acesso\",\r\n    type: \"number\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\user.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\class.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\ClassesList\\ListView\\EditClassesDetails\\fields.js",["705"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  id: {\r\n    type: \"hidden\",\r\n    value: \"\",\r\n  },\r\n  name: {\r\n    label: \"Nome\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n  courseId: {\r\n    label: \"Curso\",\r\n    type: \"number\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\queries\\class.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\UsersList\\ListView\\Toolbar.js",["706","707","708"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles,\r\n  CardHeader,\r\n} from \"@material-ui/core\";\r\nimport { Search as SearchIcon } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Toolbar = ({ className, search, ...rest }) => {\r\n  const classes = useStyles();\r\n  const handlePress = (e) => {\r\n    if (e.which == 13) {\r\n      search(e.target.value);\r\n    }\r\n  };\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\">\r\n        <Link to=\"/app/users/create\">\r\n          <Button color=\"primary\" variant=\"contained\">\r\n            Adicionar Usuário\r\n          </Button>\r\n        </Link>\r\n      </Box>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box maxWidth={500}>\r\n              <TextField\r\n                fullWidth\r\n                onKeyPress={handlePress}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon fontSize=\"small\" color=\"action\">\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                placeholder=\"Buscar Usuários\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Toolbar;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\ClassesList\\ListView\\CreateClassesDetails\\fields.js",["709"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  name: {\r\n    label: \"Nome\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n  courseId: {\r\n    label: \"Curso\",\r\n    type: \"number\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\UsersList\\ListView\\EditUsersDetails\\fields.js",["710"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  id: {\r\n    type: \"hidden\",\r\n    value: \"\",\r\n  },\r\n  name: {\r\n    label: \"Nome\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n  login: {\r\n    label: \"Login\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n  password: {\r\n    label: \"Password\",\r\n    type: \"password\",\r\n    value: \"\",\r\n  },\r\n  accessLevel: {\r\n    label: \"Nível de acesso\",\r\n    type: \"number\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\queries\\category.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\ClassesList\\ListView\\Toolbar.js",["711"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Search as SearchIcon } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Toolbar = ({ className, create, search, ...rest }) => {\r\n  const classes = useStyles();\r\n  const handlePress = (e) => {\r\n    if (e.which == 13) {\r\n      search(e.target.value);\r\n    }\r\n  };\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\">\r\n        <Link to=\"/app/classes/create\">\r\n          <Button color=\"primary\" variant=\"contained\">\r\n            Adicionar Turma\r\n          </Button>\r\n        </Link>\r\n      </Box>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box maxWidth={500}>\r\n              <TextField\r\n                fullWidth\r\n                onKeyPress={handlePress}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon fontSize=\"small\" color=\"action\">\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                placeholder=\"Buscar Turma\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Toolbar;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksCategoryList\\ListView\\EditCategoryDetails\\fields.js",["712"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  id: {\r\n    type: \"hidden\",\r\n    value: \"\",\r\n  },\r\n  name: {\r\n    label: \"Categoria\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\category.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\queries\\book.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksCategoryList\\ListView\\Toolbar.js",["713","714","715"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles,\r\n  CardHeader,\r\n} from \"@material-ui/core\";\r\nimport { Search as SearchIcon } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Toolbar = ({ className, search, ...rest }) => {\r\n  const classes = useStyles();\r\n  const handlePress = (e) => {\r\n    if (e.which == 13) {\r\n      search(e.target.value);\r\n    }\r\n  };\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\">\r\n        <Link to=\"/app/category/create\">\r\n          <Button color=\"primary\" variant=\"contained\">\r\n            Adicionar Categoria\r\n          </Button>\r\n        </Link>\r\n      </Box>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box maxWidth={500}>\r\n              <TextField\r\n                fullWidth\r\n                onKeyPress={handlePress}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon fontSize=\"small\" color=\"action\">\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                placeholder=\"Buscar Categorias de Livros\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Toolbar;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksCategoryList\\ListView\\CreateCategoryDetails\\fields.js",["716"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  name: {\r\n    label: \"Categoria\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\student.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksList\\ListView\\CreateBooksDetails\\fields.js",["717"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  name: {\r\n    label: \"Título\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n  author: {\r\n    label: \"Autor\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n  volume: {\r\n    label: \"Volume\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n  categoryId: {\r\n    label: \"Categoria\",\r\n    type: \"number\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n  quantity: {\r\n    label: \"Exemplares\",\r\n    type: \"number\",\r\n    value: \"\",\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\StudentsList\\ListView\\EditStudentsDetails\\fields.js",["718"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  id: {\r\n    type: \"hidden\",\r\n    value: \"\",\r\n  },\r\n  name: {\r\n    label: \"Nome\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n  email: {\r\n    label: \"E-mail\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n  matriculation: {\r\n    label: \"Matrícula\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n  courseId: {\r\n    label: \"Curso\",\r\n    type: \"number\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n  classId: {\r\n    label: \"Turma\",\r\n    type: \"number\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksList\\ListView\\EditBookDetails\\fields.js",["719"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  id: {\r\n    type: \"hidden\",\r\n    value: \"\",\r\n  },\r\n  name: {\r\n    label: \"Título\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n  author: {\r\n    label: \"Autor\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n  volume: {\r\n    label: \"Volume\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n  categoryId: {\r\n    label: \"Categoria\",\r\n    type: \"number\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\StudentsList\\ListView\\CreateStudentsDetails\\fields.js",["720"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  name: {\r\n    label: \"Nome\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n  email: {\r\n    label: \"E-mail\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n  matriculation: {\r\n    label: \"Matrícula\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n  courseId: {\r\n    label: \"Curso\",\r\n    type: \"number\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n  classId: {\r\n    label: \"Turma\",\r\n    type: \"number\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\book.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\StudentsList\\ListView\\Toolbar.js",["721","722"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Search as SearchIcon } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Toolbar = ({ className, search, ...rest }) => {\r\n  const classes = useStyles();\r\n  const handlePress = (e) => {\r\n    if (e.which == 13) {\r\n      search(e.target.value);\r\n    }\r\n  };\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\">\r\n        <Link to=\"/app/students/create\">\r\n          <Button color=\"primary\" variant=\"contained\">\r\n            Adicionar Estudante\r\n          </Button>\r\n        </Link>\r\n      </Box>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box maxWidth={500}>\r\n              <TextField\r\n                fullWidth\r\n                onKeyPress={handlePress}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon fontSize=\"small\" color=\"action\">\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                placeholder=\"Buscar Estudantes\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Toolbar;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\auth\\LoginView.js",["723","724","725","726","727","728","729","730","731","732","733","734"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useEffect, useCallback } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { Login } from \"../../graphql/mutations/auth\";\r\nimport { login as AuthLogin, useAuth } from \"../../providers/Auth\";\r\nimport useMyForm from \"../../hooks/MyForm\";\r\nimport fields from \"./fields\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\nconst LoginView = () => {\r\n  const { dispatch } = useAuth();\r\n  const {\r\n    fields: input,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    setTouched,\r\n    reset,\r\n    setValues,\r\n  } = useMyForm(fields);\r\n\r\n  const [mutationLogin, { loading: mutationLoading, error: mutationError }] =\r\n    useMutation(Login, {\r\n      onError() {},\r\n      onCompleted({ login }) {\r\n        dispatch(AuthLogin(login.user, login.token));\r\n      },\r\n    });\r\n  const onSubmit = async (data) => {\r\n    await mutationLogin({ variables: { input: data } });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <Box mb={3}>\r\n        <Typography color=\"textPrimary\" variant=\"h2\">\r\n          Entrar\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\r\n          Entre no gerenciador de livros didáticos\r\n        </Typography>\r\n        <Typography style={{ color: \"red\" }} gutterBottom variant=\"body2\">\r\n          {mutationError && \"Usuário ou senha incorretos\"}\r\n        </Typography>\r\n      </Box>\r\n\r\n      <TextField\r\n        error={!!errors.login}\r\n        fullWidth\r\n        label={input.login.label}\r\n        margin=\"normal\"\r\n        name=\"login\"\r\n        type={input.login.type}\r\n        onChange={({ target }) => handleChange(target)}\r\n        value={input.login.value}\r\n        variant=\"outlined\"\r\n        helperText={errors.login}\r\n      />\r\n\r\n      <TextField\r\n        error={!!errors.password}\r\n        fullWidth\r\n        label={input.password.label}\r\n        margin=\"normal\"\r\n        name=\"password\"\r\n        type={input.password.type}\r\n        onChange={({ target }) => handleChange(target)}\r\n        value={input.password.value}\r\n        helperText={errors.password}\r\n        variant=\"outlined\"\r\n      />\r\n\r\n      <Box my={2}>\r\n        <Button\r\n          color=\"primary\"\r\n          fullWidth\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n        >\r\n          Entrar\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\layouts\\DashboardLayout\\TopBar.js",["735","736","737","738"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport NotificationsIcon from \"@material-ui/icons/NotificationsOutlined\";\r\nimport InputIcon from \"@material-ui/icons/Input\";\r\nimport Logo from \"src/components/Logo\";\r\nimport { logout as AuthLogout, useAuth } from \"../../providers/Auth\";\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n}));\r\n\r\nconst TopBar = ({ className, onMobileNavOpen, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [notifications] = useState([]);\r\n  const { dispatch } = useAuth();\r\n  function LogOut() {\r\n    dispatch(AuthLogout());\r\n  }\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box flexGrow={1} />\r\n        <Hidden mdDown>\r\n          <IconButton onClick={LogOut} color=\"inherit\">\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\BooksList\\ListView\\Toolbar.js",["739","740","741"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles,\r\n  CardHeader,\r\n} from \"@material-ui/core\";\r\nimport { Search as SearchIcon } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Toolbar = ({ className, create, search, ...rest }) => {\r\n  const classes = useStyles();\r\n  const handlePress = (e) => {\r\n    if (e.which == 13) {\r\n      search(e.target.value);\r\n    }\r\n  };\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\">\r\n        <Link to=\"/app/books/create\">\r\n          <Button color=\"primary\" variant=\"contained\">\r\n            Adicionar Livro\r\n          </Button>\r\n        </Link>\r\n      </Box>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box maxWidth={500}>\r\n              <TextField\r\n                fullWidth\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon fontSize=\"small\" color=\"action\">\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                placeholder=\"Buscar Livro\"\r\n                variant=\"outlined\"\r\n                onKeyPress={handlePress}\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Toolbar;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\layouts\\MainLayout\\TopBar.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\theme\\typography.js",["742"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  overline: {\r\n    fontWeight: 500,\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\theme\\shadows.js",["743"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default [\r\n  \"none\",\r\n  \"0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)\",\r\n];\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\layouts\\DashboardLayout\\NavBar\\index.js",["744","745","746","747","748","749","750","751"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../providers/Auth\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  Settings as SettingsIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  Book as BookIcon,\r\n  Bookmark as BookMarkIcon,\r\n  Users as UsersIcon,\r\n  Square as SquareIcon,\r\n  PenTool as PenIcon,\r\n  ArrowUp as ArrowIcon,\r\n  Clock as ClockIcon,\r\n  Calendar as CalendarIcon,\r\n} from \"react-feather\";\r\nimport NavItem from \"./NavItem\";\r\n\r\nconst items = [\r\n  {\r\n    href: \"/app/books\",\r\n    icon: BookIcon,\r\n    title: \"Livros\",\r\n  },\r\n  {\r\n    href: \"/app/category\",\r\n    icon: BookMarkIcon,\r\n    title: \"Categorias de Livros\",\r\n  },\r\n  {\r\n    href: \"/app/users\",\r\n    icon: UserIcon,\r\n    title: \"Usuários\",\r\n  },\r\n  {\r\n    href: \"/app/classes\",\r\n    icon: SquareIcon,\r\n    title: \"Turma\",\r\n  },\r\n  {\r\n    href: \"/app/course\",\r\n    icon: PenIcon,\r\n    title: \"Cursos\",\r\n  },\r\n  {\r\n    href: \"/app/students\",\r\n    icon: UsersIcon,\r\n    title: \"Estudantes\",\r\n  },\r\n  {\r\n    href: \"/app/periods\",\r\n    icon: CalendarIcon,\r\n    title: \"Períodos\",\r\n  },\r\n  {\r\n    href: \"/app/loans\",\r\n    icon: ArrowIcon,\r\n    title: \"Empréstimos\",\r\n  },\r\n  {\r\n    href: \"/app/lates\",\r\n    icon: ClockIcon,\r\n    title: \"Atrasados\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256,\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: \"calc(100% - 64px)\",\r\n  },\r\n  avatar: {\r\n    cursor: \"pointer\",\r\n    width: 64,\r\n    height: 64,\r\n  },\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const { auth } = useAuth();\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname]);\r\n\r\n  const content = (\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\r\n          {\"Bem-vindo, \" + auth.user.name}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map((item) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool,\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false,\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\graphql\\mutations\\auth.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\views\\auth\\fields.js",["752"],"/*\r\n * This file is part of LMS Livros Didáticos.\r\n *\r\n * LMS Livros Didáticos is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License.\r\n *\r\n * LMS Livros Didáticos is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with Foobar.  If not, see <https://www.gnu.org/licenses/>\r\n */\r\n\r\nexport default {\r\n  login: {\r\n    label: \"Login\",\r\n    type: \"text\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n  password: {\r\n    label: \"Senha\",\r\n    type: \"password\",\r\n    value: \"\",\r\n    rules: {\r\n      required: \"Este campo é obrigatório\",\r\n      minLength: {\r\n        value: 3,\r\n        message: \"Mínimo de 3 caracteres\",\r\n      },\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\components\\Logo.js",[],"C:\\Users\\duduf\\Documents\\GitHub\\ifrs-livros-didaticos-react\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js",[],{"ruleId":"753","severity":1,"message":"754","line":19,"column":10,"nodeType":"755","messageId":"756","endLine":19,"endColumn":23},{"ruleId":"753","severity":1,"message":"757","line":28,"column":35,"nodeType":"755","messageId":"756","endLine":28,"endColumn":40},{"ruleId":"753","severity":1,"message":"758","line":59,"column":10,"nodeType":"755","messageId":"756","endLine":59,"endColumn":27},{"ruleId":"753","severity":1,"message":"759","line":60,"column":5,"nodeType":"755","messageId":"756","endLine":60,"endColumn":9},{"ruleId":"753","severity":1,"message":"760","line":22,"column":3,"nodeType":"755","messageId":"756","endLine":22,"endColumn":14},{"ruleId":"753","severity":1,"message":"761","line":24,"column":3,"nodeType":"755","messageId":"756","endLine":24,"endColumn":12},{"ruleId":"753","severity":1,"message":"762","line":26,"column":33,"nodeType":"755","messageId":"756","endLine":26,"endColumn":36},{"ruleId":"753","severity":1,"message":"763","line":30,"column":3,"nodeType":"755","messageId":"756","endLine":30,"endColumn":9},{"ruleId":"753","severity":1,"message":"764","line":34,"column":3,"nodeType":"755","messageId":"756","endLine":34,"endColumn":11},{"ruleId":"753","severity":1,"message":"765","line":44,"column":3,"nodeType":"755","messageId":"756","endLine":44,"endColumn":12},{"ruleId":"753","severity":1,"message":"766","line":21,"column":25,"nodeType":"755","messageId":"756","endLine":21,"endColumn":36},{"ruleId":"753","severity":1,"message":"762","line":22,"column":33,"nodeType":"755","messageId":"756","endLine":22,"endColumn":36},{"ruleId":"753","severity":1,"message":"763","line":26,"column":3,"nodeType":"755","messageId":"756","endLine":26,"endColumn":9},{"ruleId":"753","severity":1,"message":"764","line":30,"column":3,"nodeType":"755","messageId":"756","endLine":30,"endColumn":11},{"ruleId":"753","severity":1,"message":"765","line":40,"column":3,"nodeType":"755","messageId":"756","endLine":40,"endColumn":12},{"ruleId":"753","severity":1,"message":"767","line":17,"column":17,"nodeType":"755","messageId":"756","endLine":17,"endColumn":25},{"ruleId":"753","severity":1,"message":"768","line":22,"column":3,"nodeType":"755","messageId":"756","endLine":22,"endColumn":9},{"ruleId":"753","severity":1,"message":"769","line":24,"column":3,"nodeType":"755","messageId":"756","endLine":24,"endColumn":7},{"ruleId":"753","severity":1,"message":"770","line":25,"column":3,"nodeType":"755","messageId":"756","endLine":25,"endColumn":7},{"ruleId":"753","severity":1,"message":"765","line":26,"column":3,"nodeType":"755","messageId":"756","endLine":26,"endColumn":12},{"ruleId":"753","severity":1,"message":"771","line":27,"column":3,"nodeType":"755","messageId":"756","endLine":27,"endColumn":13},{"ruleId":"753","severity":1,"message":"772","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":17},{"ruleId":"753","severity":1,"message":"762","line":20,"column":33,"nodeType":"755","messageId":"756","endLine":20,"endColumn":36},{"ruleId":"753","severity":1,"message":"773","line":53,"column":5,"nodeType":"755","messageId":"756","endLine":53,"endColumn":15},{"ruleId":"753","severity":1,"message":"774","line":54,"column":5,"nodeType":"755","messageId":"756","endLine":54,"endColumn":10},{"ruleId":"753","severity":1,"message":"775","line":58,"column":20,"nodeType":"755","messageId":"756","endLine":58,"endColumn":25},{"ruleId":"776","severity":1,"message":"777","line":74,"column":5,"nodeType":"778","endLine":74,"endColumn":16,"suggestions":"779"},{"ruleId":"776","severity":1,"message":"780","line":78,"column":6,"nodeType":"778","endLine":78,"endColumn":15,"suggestions":"781"},{"ruleId":"782","severity":1,"message":"783","line":183,"column":48,"nodeType":"784","messageId":"785","endLine":183,"endColumn":50},{"ruleId":"753","severity":1,"message":"767","line":17,"column":17,"nodeType":"755","messageId":"756","endLine":17,"endColumn":25},{"ruleId":"753","severity":1,"message":"772","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":17},{"ruleId":"753","severity":1,"message":"762","line":20,"column":33,"nodeType":"755","messageId":"756","endLine":20,"endColumn":36},{"ruleId":"753","severity":1,"message":"773","line":56,"column":5,"nodeType":"755","messageId":"756","endLine":56,"endColumn":15},{"ruleId":"753","severity":1,"message":"774","line":57,"column":5,"nodeType":"755","messageId":"756","endLine":57,"endColumn":10},{"ruleId":"753","severity":1,"message":"786","line":58,"column":5,"nodeType":"755","messageId":"756","endLine":58,"endColumn":14},{"ruleId":"753","severity":1,"message":"767","line":17,"column":17,"nodeType":"755","messageId":"756","endLine":17,"endColumn":25},{"ruleId":"753","severity":1,"message":"772","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":17},{"ruleId":"753","severity":1,"message":"762","line":20,"column":33,"nodeType":"755","messageId":"756","endLine":20,"endColumn":36},{"ruleId":"753","severity":1,"message":"773","line":54,"column":5,"nodeType":"755","messageId":"756","endLine":54,"endColumn":15},{"ruleId":"753","severity":1,"message":"774","line":55,"column":5,"nodeType":"755","messageId":"756","endLine":55,"endColumn":10},{"ruleId":"753","severity":1,"message":"786","line":56,"column":5,"nodeType":"755","messageId":"756","endLine":56,"endColumn":14},{"ruleId":"753","severity":1,"message":"767","line":17,"column":41,"nodeType":"755","messageId":"756","endLine":17,"endColumn":49},{"ruleId":"753","severity":1,"message":"772","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":17},{"ruleId":"753","severity":1,"message":"762","line":20,"column":33,"nodeType":"755","messageId":"756","endLine":20,"endColumn":36},{"ruleId":"753","severity":1,"message":"773","line":59,"column":5,"nodeType":"755","messageId":"756","endLine":59,"endColumn":15},{"ruleId":"753","severity":1,"message":"774","line":60,"column":5,"nodeType":"755","messageId":"756","endLine":60,"endColumn":10},{"ruleId":"753","severity":1,"message":"775","line":66,"column":20,"nodeType":"755","messageId":"756","endLine":66,"endColumn":25},{"ruleId":"776","severity":1,"message":"777","line":98,"column":5,"nodeType":"778","endLine":98,"endColumn":16,"suggestions":"787"},{"ruleId":"776","severity":1,"message":"780","line":102,"column":6,"nodeType":"778","endLine":102,"endColumn":15,"suggestions":"788"},{"ruleId":"782","severity":1,"message":"783","line":203,"column":46,"nodeType":"784","messageId":"785","endLine":203,"endColumn":48},{"ruleId":"782","severity":1,"message":"783","line":252,"column":45,"nodeType":"784","messageId":"785","endLine":252,"endColumn":47},{"ruleId":"753","severity":1,"message":"767","line":17,"column":17,"nodeType":"755","messageId":"756","endLine":17,"endColumn":25},{"ruleId":"753","severity":1,"message":"772","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":17},{"ruleId":"753","severity":1,"message":"789","line":20,"column":23,"nodeType":"755","messageId":"756","endLine":20,"endColumn":31},{"ruleId":"753","severity":1,"message":"762","line":20,"column":33,"nodeType":"755","messageId":"756","endLine":20,"endColumn":36},{"ruleId":"753","severity":1,"message":"773","line":50,"column":5,"nodeType":"755","messageId":"756","endLine":50,"endColumn":15},{"ruleId":"753","severity":1,"message":"774","line":51,"column":5,"nodeType":"755","messageId":"756","endLine":51,"endColumn":10},{"ruleId":"753","severity":1,"message":"786","line":52,"column":5,"nodeType":"755","messageId":"756","endLine":52,"endColumn":14},{"ruleId":"753","severity":1,"message":"790","line":23,"column":3,"nodeType":"755","messageId":"756","endLine":23,"endColumn":17},{"ruleId":"753","severity":1,"message":"791","line":25,"column":3,"nodeType":"755","messageId":"756","endLine":25,"endColumn":15},{"ruleId":"753","severity":1,"message":"763","line":31,"column":3,"nodeType":"755","messageId":"756","endLine":31,"endColumn":9},{"ruleId":"753","severity":1,"message":"764","line":35,"column":3,"nodeType":"755","messageId":"756","endLine":35,"endColumn":11},{"ruleId":"753","severity":1,"message":"765","line":45,"column":3,"nodeType":"755","messageId":"756","endLine":45,"endColumn":12},{"ruleId":"753","severity":1,"message":"772","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":17},{"ruleId":"753","severity":1,"message":"762","line":20,"column":33,"nodeType":"755","messageId":"756","endLine":20,"endColumn":36},{"ruleId":"753","severity":1,"message":"773","line":51,"column":5,"nodeType":"755","messageId":"756","endLine":51,"endColumn":15},{"ruleId":"753","severity":1,"message":"774","line":52,"column":5,"nodeType":"755","messageId":"756","endLine":52,"endColumn":10},{"ruleId":"753","severity":1,"message":"775","line":56,"column":20,"nodeType":"755","messageId":"756","endLine":56,"endColumn":25},{"ruleId":"776","severity":1,"message":"777","line":69,"column":5,"nodeType":"778","endLine":69,"endColumn":16,"suggestions":"792"},{"ruleId":"776","severity":1,"message":"780","line":73,"column":6,"nodeType":"778","endLine":73,"endColumn":14,"suggestions":"793"},{"ruleId":"753","severity":1,"message":"794","line":20,"column":8,"nodeType":"755","messageId":"756","endLine":20,"endColumn":22},{"ruleId":"753","severity":1,"message":"795","line":21,"column":8,"nodeType":"755","messageId":"756","endLine":21,"endColumn":21},{"ruleId":"753","severity":1,"message":"796","line":24,"column":3,"nodeType":"755","messageId":"756","endLine":24,"endColumn":14},{"ruleId":"753","severity":1,"message":"797","line":26,"column":3,"nodeType":"755","messageId":"756","endLine":26,"endColumn":12},{"ruleId":"753","severity":1,"message":"762","line":28,"column":33,"nodeType":"755","messageId":"756","endLine":28,"endColumn":36},{"ruleId":"753","severity":1,"message":"763","line":32,"column":3,"nodeType":"755","messageId":"756","endLine":32,"endColumn":9},{"ruleId":"753","severity":1,"message":"764","line":36,"column":3,"nodeType":"755","messageId":"756","endLine":36,"endColumn":11},{"ruleId":"753","severity":1,"message":"765","line":46,"column":3,"nodeType":"755","messageId":"756","endLine":46,"endColumn":12},{"ruleId":"753","severity":1,"message":"772","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":17},{"ruleId":"753","severity":1,"message":"762","line":20,"column":33,"nodeType":"755","messageId":"756","endLine":20,"endColumn":36},{"ruleId":"753","severity":1,"message":"773","line":51,"column":5,"nodeType":"755","messageId":"756","endLine":51,"endColumn":15},{"ruleId":"753","severity":1,"message":"774","line":52,"column":5,"nodeType":"755","messageId":"756","endLine":52,"endColumn":10},{"ruleId":"753","severity":1,"message":"775","line":56,"column":20,"nodeType":"755","messageId":"756","endLine":56,"endColumn":25},{"ruleId":"776","severity":1,"message":"777","line":73,"column":5,"nodeType":"778","endLine":73,"endColumn":16,"suggestions":"798"},{"ruleId":"776","severity":1,"message":"780","line":77,"column":6,"nodeType":"778","endLine":77,"endColumn":14,"suggestions":"799"},{"ruleId":"753","severity":1,"message":"800","line":17,"column":17,"nodeType":"755","messageId":"756","endLine":17,"endColumn":26},{"ruleId":"753","severity":1,"message":"767","line":17,"column":28,"nodeType":"755","messageId":"756","endLine":17,"endColumn":36},{"ruleId":"753","severity":1,"message":"801","line":17,"column":38,"nodeType":"755","messageId":"756","endLine":17,"endColumn":49},{"ruleId":"753","severity":1,"message":"762","line":19,"column":33,"nodeType":"755","messageId":"756","endLine":19,"endColumn":36},{"ruleId":"753","severity":1,"message":"802","line":20,"column":10,"nodeType":"755","messageId":"756","endLine":20,"endColumn":22},{"ruleId":"753","severity":1,"message":"803","line":37,"column":3,"nodeType":"755","messageId":"756","endLine":37,"endColumn":9},{"ruleId":"753","severity":1,"message":"804","line":38,"column":3,"nodeType":"755","messageId":"756","endLine":38,"endColumn":13},{"ruleId":"753","severity":1,"message":"773","line":58,"column":5,"nodeType":"755","messageId":"756","endLine":58,"endColumn":15},{"ruleId":"753","severity":1,"message":"774","line":59,"column":5,"nodeType":"755","messageId":"756","endLine":59,"endColumn":10},{"ruleId":"753","severity":1,"message":"786","line":60,"column":5,"nodeType":"755","messageId":"756","endLine":60,"endColumn":14},{"ruleId":"753","severity":1,"message":"805","line":22,"column":3,"nodeType":"755","messageId":"756","endLine":22,"endColumn":13},{"ruleId":"753","severity":1,"message":"806","line":24,"column":3,"nodeType":"755","messageId":"756","endLine":24,"endColumn":11},{"ruleId":"753","severity":1,"message":"762","line":26,"column":33,"nodeType":"755","messageId":"756","endLine":26,"endColumn":36},{"ruleId":"753","severity":1,"message":"763","line":30,"column":3,"nodeType":"755","messageId":"756","endLine":30,"endColumn":9},{"ruleId":"753","severity":1,"message":"764","line":34,"column":3,"nodeType":"755","messageId":"756","endLine":34,"endColumn":11},{"ruleId":"753","severity":1,"message":"765","line":44,"column":3,"nodeType":"755","messageId":"756","endLine":44,"endColumn":12},{"ruleId":"753","severity":1,"message":"767","line":17,"column":41,"nodeType":"755","messageId":"756","endLine":17,"endColumn":49},{"ruleId":"753","severity":1,"message":"762","line":19,"column":33,"nodeType":"755","messageId":"756","endLine":19,"endColumn":36},{"ruleId":"753","severity":1,"message":"803","line":36,"column":3,"nodeType":"755","messageId":"756","endLine":36,"endColumn":9},{"ruleId":"753","severity":1,"message":"804","line":37,"column":3,"nodeType":"755","messageId":"756","endLine":37,"endColumn":13},{"ruleId":"753","severity":1,"message":"773","line":56,"column":5,"nodeType":"755","messageId":"756","endLine":56,"endColumn":15},{"ruleId":"753","severity":1,"message":"774","line":57,"column":5,"nodeType":"755","messageId":"756","endLine":57,"endColumn":10},{"ruleId":"753","severity":1,"message":"775","line":63,"column":20,"nodeType":"755","messageId":"756","endLine":63,"endColumn":25},{"ruleId":"776","severity":1,"message":"777","line":86,"column":5,"nodeType":"778","endLine":86,"endColumn":16,"suggestions":"807"},{"ruleId":"776","severity":1,"message":"780","line":90,"column":6,"nodeType":"778","endLine":90,"endColumn":15,"suggestions":"808"},{"ruleId":"782","severity":1,"message":"783","line":162,"column":46,"nodeType":"784","messageId":"785","endLine":162,"endColumn":48},{"ruleId":"753","severity":1,"message":"767","line":17,"column":17,"nodeType":"755","messageId":"756","endLine":17,"endColumn":25},{"ruleId":"753","severity":1,"message":"772","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":17},{"ruleId":"753","severity":1,"message":"789","line":20,"column":23,"nodeType":"755","messageId":"756","endLine":20,"endColumn":31},{"ruleId":"753","severity":1,"message":"762","line":20,"column":33,"nodeType":"755","messageId":"756","endLine":20,"endColumn":36},{"ruleId":"753","severity":1,"message":"773","line":51,"column":5,"nodeType":"755","messageId":"756","endLine":51,"endColumn":15},{"ruleId":"753","severity":1,"message":"774","line":52,"column":5,"nodeType":"755","messageId":"756","endLine":52,"endColumn":10},{"ruleId":"753","severity":1,"message":"786","line":53,"column":5,"nodeType":"755","messageId":"756","endLine":53,"endColumn":14},{"ruleId":"753","severity":1,"message":"772","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":17},{"ruleId":"753","severity":1,"message":"762","line":20,"column":33,"nodeType":"755","messageId":"756","endLine":20,"endColumn":36},{"ruleId":"753","severity":1,"message":"809","line":50,"column":11,"nodeType":"755","messageId":"756","endLine":50,"endColumn":15},{"ruleId":"753","severity":1,"message":"773","line":56,"column":5,"nodeType":"755","messageId":"756","endLine":56,"endColumn":15},{"ruleId":"753","severity":1,"message":"774","line":57,"column":5,"nodeType":"755","messageId":"756","endLine":57,"endColumn":10},{"ruleId":"753","severity":1,"message":"775","line":61,"column":20,"nodeType":"755","messageId":"756","endLine":61,"endColumn":25},{"ruleId":"776","severity":1,"message":"777","line":82,"column":5,"nodeType":"778","endLine":82,"endColumn":16,"suggestions":"810"},{"ruleId":"776","severity":1,"message":"780","line":86,"column":6,"nodeType":"778","endLine":86,"endColumn":15,"suggestions":"811"},{"ruleId":"782","severity":1,"message":"783","line":156,"column":48,"nodeType":"784","messageId":"785","endLine":156,"endColumn":50},{"ruleId":"782","severity":1,"message":"783","line":206,"column":51,"nodeType":"784","messageId":"785","endLine":206,"endColumn":53},{"ruleId":"782","severity":1,"message":"783","line":258,"column":50,"nodeType":"784","messageId":"785","endLine":258,"endColumn":52},{"ruleId":"753","severity":1,"message":"767","line":17,"column":17,"nodeType":"755","messageId":"756","endLine":17,"endColumn":25},{"ruleId":"753","severity":1,"message":"772","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":17},{"ruleId":"753","severity":1,"message":"789","line":20,"column":23,"nodeType":"755","messageId":"756","endLine":20,"endColumn":31},{"ruleId":"753","severity":1,"message":"762","line":20,"column":33,"nodeType":"755","messageId":"756","endLine":20,"endColumn":36},{"ruleId":"753","severity":1,"message":"773","line":51,"column":5,"nodeType":"755","messageId":"756","endLine":51,"endColumn":15},{"ruleId":"753","severity":1,"message":"774","line":52,"column":5,"nodeType":"755","messageId":"756","endLine":52,"endColumn":10},{"ruleId":"753","severity":1,"message":"786","line":53,"column":5,"nodeType":"755","messageId":"756","endLine":53,"endColumn":14},{"ruleId":"753","severity":1,"message":"772","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":17},{"ruleId":"753","severity":1,"message":"762","line":20,"column":33,"nodeType":"755","messageId":"756","endLine":20,"endColumn":36},{"ruleId":"753","severity":1,"message":"773","line":51,"column":5,"nodeType":"755","messageId":"756","endLine":51,"endColumn":15},{"ruleId":"753","severity":1,"message":"774","line":52,"column":5,"nodeType":"755","messageId":"756","endLine":52,"endColumn":10},{"ruleId":"753","severity":1,"message":"775","line":56,"column":20,"nodeType":"755","messageId":"756","endLine":56,"endColumn":25},{"ruleId":"776","severity":1,"message":"777","line":69,"column":5,"nodeType":"778","endLine":69,"endColumn":16,"suggestions":"812"},{"ruleId":"776","severity":1,"message":"780","line":73,"column":6,"nodeType":"778","endLine":73,"endColumn":14,"suggestions":"813"},{"ruleId":"753","severity":1,"message":"814","line":22,"column":3,"nodeType":"755","messageId":"756","endLine":22,"endColumn":15},{"ruleId":"753","severity":1,"message":"815","line":24,"column":3,"nodeType":"755","messageId":"756","endLine":24,"endColumn":13},{"ruleId":"753","severity":1,"message":"763","line":30,"column":3,"nodeType":"755","messageId":"756","endLine":30,"endColumn":9},{"ruleId":"753","severity":1,"message":"764","line":34,"column":3,"nodeType":"755","messageId":"756","endLine":34,"endColumn":11},{"ruleId":"753","severity":1,"message":"765","line":44,"column":3,"nodeType":"755","messageId":"756","endLine":44,"endColumn":12},{"ruleId":"753","severity":1,"message":"767","line":17,"column":17,"nodeType":"755","messageId":"756","endLine":17,"endColumn":25},{"ruleId":"753","severity":1,"message":"772","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":17},{"ruleId":"753","severity":1,"message":"762","line":20,"column":33,"nodeType":"755","messageId":"756","endLine":20,"endColumn":36},{"ruleId":"753","severity":1,"message":"816","line":41,"column":10,"nodeType":"755","messageId":"756","endLine":41,"endColumn":17},{"ruleId":"753","severity":1,"message":"773","line":56,"column":5,"nodeType":"755","messageId":"756","endLine":56,"endColumn":15},{"ruleId":"753","severity":1,"message":"774","line":57,"column":5,"nodeType":"755","messageId":"756","endLine":57,"endColumn":10},{"ruleId":"753","severity":1,"message":"786","line":58,"column":5,"nodeType":"755","messageId":"756","endLine":58,"endColumn":14},{"ruleId":"753","severity":1,"message":"817","line":23,"column":3,"nodeType":"755","messageId":"756","endLine":23,"endColumn":13},{"ruleId":"753","severity":1,"message":"818","line":24,"column":3,"nodeType":"755","messageId":"756","endLine":24,"endColumn":11},{"ruleId":"753","severity":1,"message":"762","line":30,"column":33,"nodeType":"755","messageId":"756","endLine":30,"endColumn":36},{"ruleId":"753","severity":1,"message":"763","line":34,"column":3,"nodeType":"755","messageId":"756","endLine":34,"endColumn":9},{"ruleId":"753","severity":1,"message":"771","line":44,"column":3,"nodeType":"755","messageId":"756","endLine":44,"endColumn":13},{"ruleId":"753","severity":1,"message":"765","line":47,"column":3,"nodeType":"755","messageId":"756","endLine":47,"endColumn":12},{"ruleId":"782","severity":1,"message":"783","line":187,"column":32,"nodeType":"784","messageId":"785","endLine":187,"endColumn":34},{"ruleId":"782","severity":1,"message":"783","line":194,"column":46,"nodeType":"784","messageId":"785","endLine":194,"endColumn":48},{"ruleId":"753","severity":1,"message":"819","line":22,"column":3,"nodeType":"755","messageId":"756","endLine":22,"endColumn":15},{"ruleId":"753","severity":1,"message":"820","line":23,"column":3,"nodeType":"755","messageId":"756","endLine":23,"endColumn":13},{"ruleId":"753","severity":1,"message":"762","line":26,"column":33,"nodeType":"755","messageId":"756","endLine":26,"endColumn":36},{"ruleId":"753","severity":1,"message":"763","line":30,"column":3,"nodeType":"755","messageId":"756","endLine":30,"endColumn":9},{"ruleId":"753","severity":1,"message":"764","line":34,"column":3,"nodeType":"755","messageId":"756","endLine":34,"endColumn":11},{"ruleId":"753","severity":1,"message":"771","line":41,"column":3,"nodeType":"755","messageId":"756","endLine":41,"endColumn":13},{"ruleId":"753","severity":1,"message":"765","line":44,"column":3,"nodeType":"755","messageId":"756","endLine":44,"endColumn":12},{"ruleId":"753","severity":1,"message":"772","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":17},{"ruleId":"753","severity":1,"message":"762","line":20,"column":33,"nodeType":"755","messageId":"756","endLine":20,"endColumn":36},{"ruleId":"753","severity":1,"message":"773","line":52,"column":5,"nodeType":"755","messageId":"756","endLine":52,"endColumn":15},{"ruleId":"753","severity":1,"message":"774","line":53,"column":5,"nodeType":"755","messageId":"756","endLine":53,"endColumn":10},{"ruleId":"753","severity":1,"message":"775","line":57,"column":20,"nodeType":"755","messageId":"756","endLine":57,"endColumn":25},{"ruleId":"782","severity":1,"message":"783","line":65,"column":14,"nodeType":"784","messageId":"785","endLine":65,"endColumn":16},{"ruleId":"782","severity":1,"message":"783","line":68,"column":14,"nodeType":"784","messageId":"785","endLine":68,"endColumn":16},{"ruleId":"782","severity":1,"message":"783","line":71,"column":14,"nodeType":"784","messageId":"785","endLine":71,"endColumn":16},{"ruleId":"776","severity":1,"message":"777","line":86,"column":5,"nodeType":"778","endLine":86,"endColumn":16,"suggestions":"821"},{"ruleId":"776","severity":1,"message":"780","line":90,"column":6,"nodeType":"778","endLine":90,"endColumn":15,"suggestions":"822"},{"ruleId":"782","severity":1,"message":"783","line":146,"column":50,"nodeType":"784","messageId":"785","endLine":146,"endColumn":52},{"ruleId":"753","severity":1,"message":"817","line":22,"column":3,"nodeType":"755","messageId":"756","endLine":22,"endColumn":13},{"ruleId":"753","severity":1,"message":"818","line":23,"column":3,"nodeType":"755","messageId":"756","endLine":23,"endColumn":11},{"ruleId":"753","severity":1,"message":"762","line":28,"column":33,"nodeType":"755","messageId":"756","endLine":28,"endColumn":36},{"ruleId":"753","severity":1,"message":"763","line":34,"column":3,"nodeType":"755","messageId":"756","endLine":34,"endColumn":9},{"ruleId":"753","severity":1,"message":"771","line":44,"column":3,"nodeType":"755","messageId":"756","endLine":44,"endColumn":13},{"ruleId":"753","severity":1,"message":"765","line":47,"column":3,"nodeType":"755","messageId":"756","endLine":47,"endColumn":12},{"ruleId":"782","severity":1,"message":"783","line":190,"column":32,"nodeType":"784","messageId":"785","endLine":190,"endColumn":34},{"ruleId":"782","severity":1,"message":"783","line":197,"column":46,"nodeType":"784","messageId":"785","endLine":197,"endColumn":48},{"ruleId":"753","severity":1,"message":"763","line":28,"column":3,"nodeType":"755","messageId":"756","endLine":28,"endColumn":9},{"ruleId":"753","severity":1,"message":"764","line":32,"column":3,"nodeType":"755","messageId":"756","endLine":32,"endColumn":11},{"ruleId":"753","severity":1,"message":"823","line":37,"column":3,"nodeType":"755","messageId":"756","endLine":37,"endColumn":18},{"ruleId":"753","severity":1,"message":"765","line":42,"column":3,"nodeType":"755","messageId":"756","endLine":42,"endColumn":12},{"ruleId":"753","severity":1,"message":"824","line":46,"column":27,"nodeType":"755","messageId":"756","endLine":46,"endColumn":37},{"ruleId":"782","severity":1,"message":"783","line":102,"column":14,"nodeType":"784","messageId":"785","endLine":102,"endColumn":16},{"ruleId":"782","severity":1,"message":"783","line":105,"column":14,"nodeType":"784","messageId":"785","endLine":105,"endColumn":16},{"ruleId":"782","severity":1,"message":"783","line":108,"column":14,"nodeType":"784","messageId":"785","endLine":108,"endColumn":16},{"ruleId":"753","severity":1,"message":"767","line":17,"column":41,"nodeType":"755","messageId":"756","endLine":17,"endColumn":49},{"ruleId":"753","severity":1,"message":"762","line":19,"column":33,"nodeType":"755","messageId":"756","endLine":19,"endColumn":36},{"ruleId":"753","severity":1,"message":"819","line":22,"column":3,"nodeType":"755","messageId":"756","endLine":22,"endColumn":15},{"ruleId":"753","severity":1,"message":"825","line":24,"column":3,"nodeType":"755","messageId":"756","endLine":24,"endColumn":15},{"ruleId":"753","severity":1,"message":"803","line":39,"column":3,"nodeType":"755","messageId":"756","endLine":39,"endColumn":9},{"ruleId":"753","severity":1,"message":"804","line":40,"column":3,"nodeType":"755","messageId":"756","endLine":40,"endColumn":13},{"ruleId":"753","severity":1,"message":"773","line":57,"column":5,"nodeType":"755","messageId":"756","endLine":57,"endColumn":15},{"ruleId":"753","severity":1,"message":"774","line":58,"column":5,"nodeType":"755","messageId":"756","endLine":58,"endColumn":10},{"ruleId":"753","severity":1,"message":"775","line":64,"column":20,"nodeType":"755","messageId":"756","endLine":64,"endColumn":25},{"ruleId":"776","severity":1,"message":"777","line":87,"column":5,"nodeType":"778","endLine":87,"endColumn":16,"suggestions":"826"},{"ruleId":"776","severity":1,"message":"780","line":91,"column":6,"nodeType":"778","endLine":91,"endColumn":15,"suggestions":"827"},{"ruleId":"753","severity":1,"message":"767","line":17,"column":17,"nodeType":"755","messageId":"756","endLine":17,"endColumn":25},{"ruleId":"753","severity":1,"message":"772","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":17},{"ruleId":"753","severity":1,"message":"789","line":20,"column":23,"nodeType":"755","messageId":"756","endLine":20,"endColumn":31},{"ruleId":"753","severity":1,"message":"762","line":20,"column":33,"nodeType":"755","messageId":"756","endLine":20,"endColumn":36},{"ruleId":"753","severity":1,"message":"816","line":37,"column":10,"nodeType":"755","messageId":"756","endLine":37,"endColumn":17},{"ruleId":"753","severity":1,"message":"773","line":52,"column":5,"nodeType":"755","messageId":"756","endLine":52,"endColumn":15},{"ruleId":"753","severity":1,"message":"774","line":53,"column":5,"nodeType":"755","messageId":"756","endLine":53,"endColumn":10},{"ruleId":"753","severity":1,"message":"786","line":54,"column":5,"nodeType":"755","messageId":"756","endLine":54,"endColumn":14},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":42,"endColumn":3},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":46,"endColumn":3},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":25,"endColumn":3},{"ruleId":"753","severity":1,"message":"831","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":13},{"ruleId":"753","severity":1,"message":"789","line":23,"column":23,"nodeType":"755","messageId":"756","endLine":23,"endColumn":31},{"ruleId":"753","severity":1,"message":"832","line":37,"column":3,"nodeType":"755","messageId":"756","endLine":37,"endColumn":13},{"ruleId":"753","severity":1,"message":"833","line":38,"column":3,"nodeType":"755","messageId":"756","endLine":38,"endColumn":13},{"ruleId":"753","severity":1,"message":"771","line":39,"column":3,"nodeType":"755","messageId":"756","endLine":39,"endColumn":13},{"ruleId":"782","severity":1,"message":"783","line":65,"column":17,"nodeType":"784","messageId":"785","endLine":65,"endColumn":19},{"ruleId":"753","severity":1,"message":"768","line":22,"column":10,"nodeType":"755","messageId":"756","endLine":22,"endColumn":16},{"ruleId":"782","severity":1,"message":"783","line":58,"column":17,"nodeType":"784","messageId":"785","endLine":58,"endColumn":19},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":30,"endColumn":3},{"ruleId":"753","severity":1,"message":"831","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":13},{"ruleId":"753","severity":1,"message":"832","line":30,"column":3,"nodeType":"755","messageId":"756","endLine":30,"endColumn":13},{"ruleId":"782","severity":1,"message":"783","line":48,"column":17,"nodeType":"784","messageId":"785","endLine":48,"endColumn":19},{"ruleId":"782","severity":1,"message":"783","line":58,"column":17,"nodeType":"784","messageId":"785","endLine":58,"endColumn":19},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":42,"endColumn":3},{"ruleId":"782","severity":1,"message":"783","line":46,"column":17,"nodeType":"784","messageId":"785","endLine":46,"endColumn":19},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":34,"endColumn":3},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":30,"endColumn":3},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":47,"endColumn":3},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":62,"endColumn":3},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":42,"endColumn":3},{"ruleId":"753","severity":1,"message":"831","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":13},{"ruleId":"753","severity":1,"message":"832","line":30,"column":3,"nodeType":"755","messageId":"756","endLine":30,"endColumn":13},{"ruleId":"782","severity":1,"message":"783","line":48,"column":17,"nodeType":"784","messageId":"785","endLine":48,"endColumn":19},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":38,"endColumn":3},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":59,"endColumn":3},{"ruleId":"782","severity":1,"message":"783","line":46,"column":17,"nodeType":"784","messageId":"785","endLine":46,"endColumn":19},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":34,"endColumn":3},{"ruleId":"753","severity":1,"message":"831","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":13},{"ruleId":"753","severity":1,"message":"832","line":30,"column":3,"nodeType":"755","messageId":"756","endLine":30,"endColumn":13},{"ruleId":"782","severity":1,"message":"783","line":47,"column":17,"nodeType":"784","messageId":"785","endLine":47,"endColumn":19},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":30,"endColumn":3},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":63,"endColumn":3},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":74,"endColumn":3},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":62,"endColumn":3},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":70,"endColumn":3},{"ruleId":"753","severity":1,"message":"831","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":13},{"ruleId":"782","severity":1,"message":"783","line":47,"column":17,"nodeType":"784","messageId":"785","endLine":47,"endColumn":19},{"ruleId":"753","severity":1,"message":"800","line":17,"column":17,"nodeType":"755","messageId":"756","endLine":17,"endColumn":26},{"ruleId":"753","severity":1,"message":"801","line":17,"column":28,"nodeType":"755","messageId":"756","endLine":17,"endColumn":39},{"ruleId":"753","severity":1,"message":"834","line":18,"column":18,"nodeType":"755","messageId":"756","endLine":18,"endColumn":28},{"ruleId":"753","severity":1,"message":"762","line":19,"column":23,"nodeType":"755","messageId":"756","endLine":19,"endColumn":26},{"ruleId":"753","severity":1,"message":"835","line":27,"column":3,"nodeType":"755","messageId":"756","endLine":27,"endColumn":12},{"ruleId":"753","severity":1,"message":"769","line":28,"column":3,"nodeType":"755","messageId":"756","endLine":28,"endColumn":7},{"ruleId":"753","severity":1,"message":"770","line":29,"column":3,"nodeType":"755","messageId":"756","endLine":29,"endColumn":7},{"ruleId":"753","severity":1,"message":"836","line":32,"column":3,"nodeType":"755","messageId":"756","endLine":32,"endColumn":13},{"ruleId":"753","severity":1,"message":"773","line":42,"column":5,"nodeType":"755","messageId":"756","endLine":42,"endColumn":15},{"ruleId":"753","severity":1,"message":"774","line":43,"column":5,"nodeType":"755","messageId":"756","endLine":43,"endColumn":10},{"ruleId":"753","severity":1,"message":"786","line":44,"column":5,"nodeType":"755","messageId":"756","endLine":44,"endColumn":14},{"ruleId":"753","severity":1,"message":"837","line":47,"column":36,"nodeType":"755","messageId":"756","endLine":47,"endColumn":51},{"ruleId":"753","severity":1,"message":"772","line":20,"column":8,"nodeType":"755","messageId":"756","endLine":20,"endColumn":17},{"ruleId":"753","severity":1,"message":"838","line":23,"column":3,"nodeType":"755","messageId":"756","endLine":23,"endColumn":8},{"ruleId":"753","severity":1,"message":"839","line":31,"column":8,"nodeType":"755","messageId":"756","endLine":31,"endColumn":25},{"ruleId":"753","severity":1,"message":"840","line":45,"column":10,"nodeType":"755","messageId":"756","endLine":45,"endColumn":23},{"ruleId":"753","severity":1,"message":"831","line":19,"column":8,"nodeType":"755","messageId":"756","endLine":19,"endColumn":13},{"ruleId":"753","severity":1,"message":"832","line":30,"column":3,"nodeType":"755","messageId":"756","endLine":30,"endColumn":13},{"ruleId":"782","severity":1,"message":"783","line":48,"column":17,"nodeType":"784","messageId":"785","endLine":48,"endColumn":19},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":51,"endColumn":3},{"ruleId":"828","severity":1,"message":"841","line":17,"column":1,"nodeType":"830","endLine":43,"endColumn":3},{"ruleId":"753","severity":1,"message":"834","line":18,"column":18,"nodeType":"755","messageId":"756","endLine":18,"endColumn":28},{"ruleId":"753","severity":1,"message":"763","line":22,"column":3,"nodeType":"755","messageId":"756","endLine":22,"endColumn":9},{"ruleId":"753","severity":1,"message":"768","line":24,"column":3,"nodeType":"755","messageId":"756","endLine":24,"endColumn":9},{"ruleId":"753","severity":1,"message":"842","line":33,"column":18,"nodeType":"755","messageId":"756","endLine":33,"endColumn":33},{"ruleId":"753","severity":1,"message":"843","line":34,"column":15,"nodeType":"755","messageId":"756","endLine":34,"endColumn":27},{"ruleId":"753","severity":1,"message":"844","line":35,"column":11,"nodeType":"755","messageId":"756","endLine":35,"endColumn":19},{"ruleId":"753","severity":1,"message":"845","line":36,"column":15,"nodeType":"755","messageId":"756","endLine":36,"endColumn":27},{"ruleId":"753","severity":1,"message":"846","line":37,"column":18,"nodeType":"755","messageId":"756","endLine":37,"endColumn":33},{"ruleId":"828","severity":1,"message":"829","line":17,"column":1,"nodeType":"830","endLine":42,"endColumn":3},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'LocationSearching' is defined but never used.","'hist' is assigned a value but never used.","'BooksCreate' is defined but never used.","'BooksEdit' is defined but never used.","'gql' is defined but never used.","'Avatar' is defined but never used.","'Checkbox' is defined but never used.","'TextField' is defined but never used.","'StudentEdit' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'Link' is defined but never used.","'Typography' is defined but never used.","'PropTypes' is defined but never used.","'setTouched' is assigned a value but never used.","'reset' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'values'. Either include it or remove the dependency array.","ArrayExpression",["847"],"React Hook useEffect has a missing dependency: 'onCompleted'. Either include it or remove the dependency array.",["848"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setValues' is assigned a value but never used.",["849"],["850"],"'useQuery' is defined but never used.","'CategoryCreate' is defined but never used.","'CategoryEdit' is defined but never used.",["851"],["852"],"'ClassesDetails' is defined but never used.","'CreateClasses' is defined but never used.","'ClassCreate' is defined but never used.","'ClassEdit' is defined but never used.",["853"],["854"],"'useEffect' is defined but never used.","'useCallback' is defined but never used.","'useLazyQuery' is defined but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'UserCreate' is defined but never used.","'UserEdit' is defined but never used.",["855"],["856"],"'auth' is assigned a value but never used.",["857"],["858"],["859"],["860"],"'CourseCreate' is defined but never used.","'CourseEdit' is defined but never used.","'useAuth' is defined but never used.","'LoanCreate' is defined but never used.","'LoanEdit' is defined but never used.","'PeriodCreate' is defined but never used.","'PeriodEdit' is defined but never used.",["861"],["862"],"'TablePagination' is defined but never used.","'useHistory' is defined but never used.","'PeriodDelete' is defined but never used.",["863"],["864"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Modal' is defined but never used.","'CardHeader' is defined but never used.","'IconButton' is defined but never used.","'RouterLink' is defined but never used.","'Container' is defined but never used.","'makeStyles' is defined but never used.","'mutationLoading' is assigned a value but never used.","'Badge' is defined but never used.","'NotificationsIcon' is defined but never used.","'notifications' is assigned a value but never used.","Assign array to a variable before exporting as module default","'AlertCircleIcon' is defined but never used.","'BarChartIcon' is defined but never used.","'LockIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'ShoppingBagIcon' is defined but never used.",{"desc":"865","fix":"866"},{"desc":"867","fix":"868"},{"desc":"865","fix":"869"},{"desc":"867","fix":"870"},{"desc":"865","fix":"871"},{"desc":"872","fix":"873"},{"desc":"865","fix":"874"},{"desc":"872","fix":"875"},{"desc":"865","fix":"876"},{"desc":"867","fix":"877"},{"desc":"865","fix":"878"},{"desc":"867","fix":"879"},{"desc":"865","fix":"880"},{"desc":"872","fix":"881"},{"desc":"865","fix":"882"},{"desc":"867","fix":"883"},{"desc":"865","fix":"884"},{"desc":"867","fix":"885"},"Update the dependencies array to be: [setValues, values]",{"range":"886","text":"887"},"Update the dependencies array to be: [loading, onCompleted]",{"range":"888","text":"889"},{"range":"890","text":"887"},{"range":"891","text":"889"},{"range":"892","text":"887"},"Update the dependencies array to be: [onCompleted, values]",{"range":"893","text":"894"},{"range":"895","text":"887"},{"range":"896","text":"894"},{"range":"897","text":"887"},{"range":"898","text":"889"},{"range":"899","text":"887"},{"range":"900","text":"889"},{"range":"901","text":"887"},{"range":"902","text":"894"},{"range":"903","text":"887"},{"range":"904","text":"889"},{"range":"905","text":"887"},{"range":"906","text":"889"},[2207,2218],"[setValues, values]",[2272,2281],"[loading, onCompleted]",[2678,2689],[2743,2752],[1997,2008],[2062,2070],"[onCompleted, values]",[2039,2050],[2104,2112],[2327,2338],[2392,2401],[2510,2521],[2575,2584],[1980,1991],[2045,2053],[2470,2481],[2535,2544],[2205,2216],[2270,2279]]